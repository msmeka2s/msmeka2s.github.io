[
  {
    "name": "Übung 1",
    "items": [
      {
        "heading": "Fachliche Argumentation über Erfolgsprinzipien des WWW",
        "name": "Übung 1.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Fachliche Argumentation über Erfolgsprinzipien des WWW</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: #ddd;\n\t\t\t}\n\t\t\th2 {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tp {\n\t\t\t\tmargin: 15px 0 0;\n\t\t\t}\n\t\t\t@media (min-width: 768px) {\n\t\t\t\t.item {\n\t\t\t\t\twidth: 66%;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"item\">\n\t\t\t<h2>Mit welchen fachlichen Argumenten wurde das WWW-Proposal von TBL abgelehnt?</h2>\n\t\t\t<p>der Vorgesetzte von TBL hat die Vagheit in dem Konzept nicht verstanden und mit der\n\t\t\t\tEvaluierbarkeit verwechselt. Außerdem hatte die Hypertext-Community den Eindruck, dass sie in der\n\t\t\t\tWissenschaft schon weiter voran geschritten war, und dass das Konzept von TBL ein Rückschritt\n\t\t\t\tgewesen wäre. Das lag unter anderem daran, dass es in dem Konzept möglich war \"broken links\" zu\n\t\t\t\thaben, also Links, die ins leere zeigen.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Was sind die fachlichen Argumente, warum das WWW dennoch ein Erfolg wurde?</h2>\n\t\t\t<p>Das WWW wurde dennoch ein Erfolg, da es möglich war die unterschiedlichen Technologien unabhängig\n\t\t\t\tvoneinander in mehreren Dimensionen weiter zu entwickeln und das ohne zentrale Kontrolle.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Was wäre der Preis für die garantierte Verhinderung von “broken links”?</h2>\n\t\t\t<p>Wenn man versuchen würde, \"broken links\" zu verhindern, könnte die Dezentralität des WWW nicht mehr gewährleistet werden.</p>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/HTML"
        ]
      },
      {
        "heading": "HTTP",
        "name": "Übung 1.2",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>HTTP</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: #ddd;\n\t\t\t}\n\t\t\th2 {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tp {\n\t\t\t\tmargin: 15px 0 0;\n\t\t\t}\n\t\t\t@media (min-width: 768px) {\n\t\t\t\t.item {\n\t\t\t\t\twidth: 66%;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"item\">\n\t\t\t<h2>Sie bekommen im Browser den HTTP Status Code 200. Was bedeutet das?</h2>\n\t\t\t<p>Der Status Code 200 bedeutet, dass die Anfrage erfolgreich bearbeitet wurde und das Ergebnis der\n\t\t\t\tAnfrage in der Antwort übertragen wird.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Sie bekommen im Browser den HTTP Status Code 301. Was hat das zu bedeuten?</h2>\n\t\t\t<p>Der Status Code 301 bedeutet, dass die angeforderte Ressource ab sofort unter der im\n\t\t\t\t„Location“-Header-Feld angegebenen Adresse bereitsteht (auch Redirect genannt). Die alte Adresse\n\t\t\t\tist nicht länger gültig.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Sie bekommen im Browser den HTTP Status Code 400. Was hat das zu bedeuten? Was können Sie dagegen tun?</h2>\n\t\t\t<p>Der Status Code 400 bedeutet, dass die Anfrage-Nachricht fehlerhaft aufgebaut war. Um das zu\n\t\t\t\tverhindern, müssen die Daten, die an den Server übermittelt werden das richtige Format und die\n\t\t\t\trichtige Syntax haben, um vom Server richtig interpretiert werden zu können.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Sie bekommen im Browser den HTTP Status Code 403. Was hat das zu bedeuten? Was können Sie dagegen tun?</h2>\n\t\t\t<p>Der Status Code 403 bedeutet, dass die Anfrage  mangels Berechtigung des Clients nicht durchgeführt wurde,\n\t\t\t\tbspw. weil der authentifizierte Benutzer nicht berechtigt ist oder eine als HTTPS konfigurierte URL nur\n\t\t\t\tmit HTTP aufgerufen wurde.</p>\n\t\t\t<p>Um diesen Status Code zu vermeiden ist es wichtig sicher zu stellen, dass der Benutzer, der diese URL\n\t\t\t\taufruft, auch über die notwendige Zugriffsberechtigung verfügt.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>In einer Webanwendung benötigen Sie eine OPTIONS-Anfrage, die die Optionen des Servers vor dem\n\t\t\t\teigentlichen Zugriff erfragen soll. Aus Performanzgründen soll die Abfrage jedoch cacheable sein.\n\t\t\t\tWie könnten Sie dafür eine Lösung angehen?</h2>\n\t\t\t<p>Es ist zwar von den Erfindern so gewünscht, dass die OPTIONS-Anfrage nicht cacheable ist.\n\t\t\t\tDieser Mechanismus muss allerdings von den Programmierern selbst umgesetzt werden. So kann der\n\t\t\t\tProgrammierer sich auch dazu entscheiden, die Antwort der OPTIONS-Anfrage einfach im Cache zu speichern.</p>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/HTML"
        ]
      },
      {
        "heading": "Tribute Page",
        "name": "Übung 1.3",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Tribute Page</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #eee;\n\t\t\t\tpadding:  20px 0 10px;\n\t\t\t}\n\t\t\t.imageContent {\n\t\t\t\tpadding:  0 20px;\n\t\t\t}\n\t\t\t.imageContent img {\n\t\t\t\tmax-width: 100%;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"header\">\n\t\t\t<h1>Dr. Norman Borlaug</h1>\n\t\t\t<p>The man who saved a billion lives</p>\n\t\t</div>\n\t\t<div class=\"imageContent\">\n\t\t\t<img alt=\"tribute-img\" src=\"img/tribute-img.png\" />\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/HTML"
        ]
      },
      {
        "heading": "Survey Form",
        "name": "Übung 1.4",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Survey Form</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.formContainer {\n\t\t\t\tbackground: #b2d6d1;\n\t\t\t\tpadding: 20px 0 10px;\n\t\t\t}\n\t\t\t.formContainer h1 {\n\t\t\t\tmargin: 0 0 20px;\n\t\t\t}\n\t\t\t.formContainer form {\n\t\t\t\tmargin: 0 15px;\n\t\t\t\tbackground: #FAFAFA;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 20px 0;\n\t\t\t}\n\t\t\t.formContainer form .row {\n\t\t\t\tdisplay:  flex;\n\t\t\t\tmargin-top: 20px;\n\t\t\t\tfont-size: 1.2em;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t\t.formContainer form .row > * {\n\t\t\t\tmargin: 0 10px;\n\t\t\t}\n\t\t\t.formContainer form .row > label {\n\t\t\t    text-align: left;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tmargin: 0 16px;\n\t\t\t}\n\t\t\t.formContainer form .row > input {\n\t\t\t\tpadding: 6px 4px;\n\t\t\t\tmargin: 5px 16px 0;\n\t\t\t}\n\t\t\t.formContainer form .row > select {\n\t\t\t\tpadding: 6px 4px;\n\t\t\t\tmargin: 5px 16px 0;\n\t\t\t}\n\t\t\t.formContainer form .row > .options {\n\t\t\t\ttext-align: left;\n\t\t\t\tmargin-top: 5px;\n\t\t\t}\n\t\t\t.formContainer form .row > .options label {\n\t\t\t\tfont-size: 16px;\n\t\t\t}\n\t\t\t.formContainer form .row > .options > div {\n\t\t\t\tmargin-bottom: 2px;\n\t\t\t}\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t.formContainer form {\n\t\t\t\t\tmargin: 0 50px;\n\t\t\t\t}\n\t\t\t\t.formContainer form .row {\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t}\n\t\t\t\t.formContainer form .row > input {\n\t\t\t\t\twidth: 25%;\n\t\t\t\t}\n\t\t\t\t.formContainer form .row > label {\n\t\t\t\t\ttext-align: right;\n\t\t\t\t\twidth: 50%;\n\t\t\t\t}\n\t\t\t\t.formContainer form .row > select {\n\t\t\t\t\twidth: 27%;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@media (min-width: 1200px) {\n\t\t\t\t.formContainer form .row > select {\n\t\t\t\t\twidth: 12%;\n\t\t\t\t}\n\t\t\t\t.formContainer form .row > input,\n\t\t\t\t.formContainer form .row > select,\n\t\t\t\t.formContainer form .row > .options {\n\t\t\t\t\tmargin-top: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"formContainer\">\n\t\t\t<h1>Survey Form</h1>\n\t\t\t<form>\n\t\t\t\t<p>Let us know how we can improve freeCodeCamp</p>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"name\">* Name:</label>\n\t\t\t\t\t<input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"email\">* Email:</label>\n\t\t\t\t\t<input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your Email\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"age\">* Age:</label>\n\t\t\t\t\t<input type=\"number\" id=\"age\" name=\"age\" placeholder=\"Age\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"role\">Which option best describes your current role?</label>\n\t\t\t\t\t<select id=\"role\" name=\"role\">\n\t\t\t\t\t\t<option value=\"student\">Student</option>\n\t\t\t\t\t\t<option value=\"teacher\">Teacher</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"age\">* How likely is that your would recommend freeCodeCamp to a friend?</label>\n\t\t\t\t\t<div class=\"options\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"radio\" id=\"definitely\" name=\"recommend\" value=\"definitely\">\n\t\t\t\t\t\t  <label for=\"definitely\">Definitely</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"radio\" id=\"maybe\" name=\"recommend\" value=\"maybe\">\n\t\t\t\t\t\t  <label for=\"maybe\">Maybe</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"radio\" id=\"notSure\" name=\"recommend\" value=\"notSure\">\n\t\t\t\t\t\t  <label for=\"notSure\">Not sure</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"age\">What do you like most in FCC:</label>\n\t\t\t\t\t<select id=\"fcc\" name=\"fcc\">\n\t\t\t\t\t\t<option value=\"\">Select an option</option>\n\t\t\t\t\t\t<option value=\"option1\">Option 1</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<label for=\"age\">Things that should be improved in the future <br> (Check all that apply):</label>\n\t\t\t\t\t<div class=\"options\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"checkbox\" id=\"frontend\" name=\"improve\" value=\"frontend\">\n\t\t\t\t\t\t  <label for=\"frontend\">Front-end Projects</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"checkbox\" id=\"backend\" name=\"improve\" value=\"backend\">\n\t\t\t\t\t\t  <label for=\"backend\">Back-end Projects</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t  <input type=\"checkbox\" id=\"dataVisualization\" name=\"improve\" value=\"dataVisualization\">\n\t\t\t\t\t\t  <label for=\"dataVisualization\">Data Visualization</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/HTML"
        ]
      },
      {
        "heading": "Product Landing Page",
        "name": "Übung 1.5",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Product Landing Page</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t.button {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tbackground: #F88E37;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth:  70%;\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tmargin:  0 auto;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #363636;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 10px 0;\n\t\t\t}\n\t\t\t.header .nav {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\t\t\t.header a {\n\t\t\t\tcolor: white;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tflex-basis: 50%;\n\t\t\t\tmargin: 4px 0;\n\t\t\t}\n\t\t\t.mainContent {\n\t\t\t\tbackground: #EBEAE6;\n\t\t\t\tpadding: 20px 0 10px;\n\t\t\t}\n\t\t\t.mainContent h1 {\n\t\t\t\tmargin: 0 0 20px;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.mainContent .product {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t\t.mainContent .product > * {\n\t\t\t\twidth: 50%;\n\t\t\t}\n\t\t\t.mainContent .product .imgContainer {\n\t\t\t\ttext-align: center;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t\t.mainContent .product .imgContainer img {\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tborder: 1px solid #000;\n\t\t\t\tmax-width: 100%;\n\t\t\t\twidth: 70%;\n\t\t\t}\n\t\t\t.mainContent .product .info {\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 20px 10px 0;\n\t\t\t\twidth: 100%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\t\t\t.mainContent .product .info p {\n\t\t\t\tmargin:  30px 0;\n\t\t\t}\n\t\t\t.footer {\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground: #011826;\n\t\t\t\tcolor: white;\n\t\t\t\tpadding:  1px 0 30px;\n\t\t\t}\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t.header {\n\t\t\t\t\tpadding: 20px 0;\n\t\t\t\t}\n\t\t\t\t.header .nav {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t\t.header a {\n\t\t\t\t\tmargin: 0 10px;\n\t\t\t\t}\n\t\t\t\t.mainContent .product {\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t}\n\t\t\t\t.mainContent .product .info p {\n\t\t\t\t\tmargin: 50px 0;\n\t\t\t\t}\n\t\t\t\t.button {\n\t\t\t\t\twidth: 50%;\n\t\t\t\t}\n\t\t\t\t.footer {\n\t\t\t\t\tpadding-top: 30px;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"header\">\n\t\t\t<div class=\"nav\">\n\t\t\t\t<a href=\"#\">The book series</a>\n\t\t\t\t<a href=\"#\">Textimonials</a>\n\t\t\t\t<a href=\"#\">The Author</a>\n\t\t\t\t<a href=\"#\">Free resources</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"mainContent\">\n\t\t\t<h1>You dont know JavScript</h1>\n\t\t\t<div class=\"product\">\n\t\t\t\t<div class=\"imgContainer\">\n\t\t\t\t\t<img alt=\"product-cover\" src=\"img/landing-img.png\" />\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info\">\n\t\t\t\t\t<p>Don't just drift through Javascript.</p>\n\t\t\t\t\t<p>Understand how Javascript works</p>\n\t\t\t\t\t<p>Start your journey through the bumpy side of Javascript</p>\n\t\t\t\t\t<a href=\"#\" class=\"button\">Order your copy now</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"footer\">\n\t\t\t<p>The first ebook in the book series is absolutely free.</p>\n\t\t\t<a href=\"#\" class=\"button\">Find out more about this offer</a>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/HTML"
        ]
      }
    ]
  },
  {
    "name": "Übung 2",
    "items": [
      {
        "heading": "Flexbox",
        "name": "Übung 2.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Responsiv mit Flexbox Desktop-First</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\thtml, body, .content {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t.content {\n\t\t\t\tmargin: 20px 40px;\n\t\t\t}\n\t\t\t.flexContainer {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.flexContainer.topbar {\n\t\t\t\theight: 30%;\n\t\t\t}\n\t\t\t.flexContainer.mainContent {\n\t\t\t\theight: 60%;\n\t\t\t\tgap: 10px;\n\t\t\t\tmargin-top: 20px;\n\t\t\t}\n\t\t\t.redSquare {\n\t\t\t\tbackground: red;\n\t\t\t\tflex-basis: 100%;\n\t\t\t}\n\t\t\t.greenSquare {\n\t\t\t\tbackground: #0f0;\n\t\t\t\tflex-basis: 20%;\n\t\t\t}\n\t\t\t.blueSquare {\n\t\t\t\tbackground: blue;\n\t\t\t\tflex-basis: 60%;\n\t\t\t}\n\t\t\t.violetSquare {\n\t\t\t\tbackground: violet;\n\t\t\t\tflex-basis: 20%;\n\t\t\t}\n\t\t\t@media (max-width: 768px) {\n\t\t\t\t.content {\n\t\t\t\t\tmargin: 40px 20px;\n\t\t\t\t}\n\t\t\t\t.flexContainer.mainContent {\n\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\theight: 120%;\n\t\t\t\t\tgap: 4px;\n\t\t\t\t}\n\t\t\t\t.greenSquare {\n\t\t\t\t\tflex-basis: 32%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.blueSquare {\n\t\t\t\t\tflex-basis: 66%;\n\t\t\t\t}\n\t\t\t\t.violetSquare {\n\t\t\t\t\tflex-basis: 100%;\n\t\t\t\t\theight: 20%;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@media (max-width: 375px) {\n\t\t\t\t.content {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.flexContainer.topbar {\n\t\t\t\t\theight: 20%;\n\t\t\t\t}\n\t\t\t\t.flexContainer.mainContent {\n\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\tgap: 0;\n\t\t\t\t}\n\t\t\t\t.redSquare {\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.greenSquare {\n\t\t\t\t\tflex-basis: 100%;\n\t\t\t\t\theight: 20%;\n\t\t\t\t}\n\t\t\t\t.blueSquare {\n\t\t\t\t\tflex-basis: 100%;\n\t\t\t\t\theight: 120%;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"content\">\n\t\t\t<div class=\"flexContainer topbar\">\n\t\t\t\t<div class=\"redSquare\">&nbsp;</div>\n\t\t\t</div>\n\t\t\t<div class=\"flexContainer mainContent\">\n\t\t\t\t<div class=\"greenSquare\">&nbsp;</div>\n\t\t\t\t<div class=\"blueSquare\">&nbsp;</div>\n\t\t\t\t<div class=\"violetSquare\">&nbsp;</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/CSS"
        ]
      },
      {
        "heading": "Grid",
        "name": "Übung 2.2",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Responsiv mit Flexbox Desktop-First</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\thtml, body, .gridContainer {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t.gridContainer {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-rows: 20% 20% 120% 20%;\n\t\t\t}\n\t\t\t.redSquare {\n\t\t\t\tbackground: red;\n\t\t\t}\n\t\t\t.greenSquare {\n\t\t\t\tbackground: #0f0;\n\t\t\t}\n\t\t\t.blueSquare {\n\t\t\t\tbackground: blue;\n\t\t\t}\n\t\t\t.violetSquare {\n\t\t\t\tbackground: violet;\n\t\t\t}\n\t\t\t@media (min-width: 375px) {\n\t\t\t\t.gridContainer {\n\t\t\t\t\tgrid-template-columns: 33% 66%;\n\t\t\t\t\tgrid-template-rows: 25% 100% 20%;\n\t\t\t\t\tcolumn-gap: 4px;\n\t\t\t\t\trow-gap: 10px;\n\t\t\t\t\tmargin: 30px 20px;\n\t\t\t\t}\n\t\t\t\t.redSquare, .violetSquare {\n\t\t\t\t\tgrid-column-start: 1;\n\t\t\t\t\tgrid-column-end: 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@media (min-width: 768px) {\n\t\t\t\t.gridContainer {\n\t\t\t\t\tmargin: 20px 40px;\n\t\t\t\t\tgrid-template-columns: 20% 60% 20%;\n\t\t\t\t\tgrid-template-rows: 30% 60%;\n\t\t\t\t\tcolumn-gap: 10px;\n\t\t\t\t\trow-gap: 20px;\n\t\t\t\t}\n\t\t\t\t.redSquare {\n\t\t\t\t\tgrid-column-end: 4;\n\t\t\t\t}\n\t\t\t\t.violetSquare {\n\t\t\t\t\tgrid-column-start: 3;\n\t\t\t\t\tgrid-column-end: 4;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"gridContainer\">\n\t\t\t<div class=\"redSquare\">&nbsp;</div>\n\t\t\t<div class=\"greenSquare\">&nbsp;</div>\n\t\t\t<div class=\"blueSquare\">&nbsp;</div>\n\t\t\t<div class=\"violetSquare\">&nbsp;</div>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/CSS"
        ]
      },
      {
        "heading": "Holy Grail - Flexbox",
        "name": "Übung 2.3",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Holy Grail mit Flexbox</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\thtml, body {\n\t\t\t\theight: 99%;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.leftSide ul,\n\t\t\t.rightSide ul {\n\t\t\t\tpadding: 0;\n\t\t\t\tlist-style: none;\n\t\t\t}\n\t\t\t.leftSide ul li,\n\t\t\t.rightSide ul li {\n\t\t\t\tfont-size: 20px;\n\t\t\t\tdisplay: inline;\n\t\t\t}\n\t\t\t.flexContainer {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tmargin: 10px;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tcolor:  white;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #c04f50;\n\t\t\t\tborder-radius: 10px 10px 0 0;\n\t\t\t\tpadding: 0 5px 8px;\n\t\t\t}\n\t\t\t.header .nav {\n\t\t\t\ttext-align: left;\n\t\t\t\tmargin-top: 10px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\t\t\t.header .nav a {\n\t\t\t\tbackground: #6A709F;\n\t\t\t\tcolor: black;\n\t\t\t\tborder-radius: 20px;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tpadding: 4px 30px;\n\t\t\t\tmargin: 3px 5px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-family: Arial;\n\t\t\t\tborder: 2px outset #F9FBFC;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tflex-basis: 10%;\n\t\t\t}\n\t\t\t.main {\n\t\t\t\tdisplay: flex;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t\t.leftSide, .rightSide {\n\t\t\t\tbackground: #C28280;\n\t\t\t}\n\t\t\t.mainContent {\n\t\t\t\tbackground: #6D9FBF;\n\t\t\t\toverflow-y: auto;\n\t\t\t}\n\t\t\t.footer {\n\t\t\t\tbackground: black;\n\t\t\t\tpadding-bottom: 15px;\n\t\t\t\tborder-radius: 0 0 10px 10px;\n\t\t\t}\n\t\t\t.footer span {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t.footer a {\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t.flexContainer {\n\t\t\t\t\theight: 98%;\n\t\t\t\t}\n\t\t\t\t.header h2,\n\t\t\t\t.footer h2 {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tfont-weight: normal;\n\t\t\t\t}\n\t\t\t\t.header .nav {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-top: 0;\n\t\t\t\t}\n\t\t\t\t.main {\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t}\n\t\t\t\t.leftSide, .rightSide {\n\t\t\t\t\tpadding: 0 4rem;\n\t\t\t\t}\n\t\t\t\t.leftSide ul,\n\t\t\t\t.rightSide ul {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.footer span {\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@media (min-width: 1200px) {\n\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"flexContainer\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<h2>Header</h2>\n\t\t\t\t<div class=\"nav\">\n\t\t\t\t\t<a href=\"#\">Home</a>\n\t\t\t\t\t<a href=\"#\">News</a>\n\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"main\">\n\t\t\t\t<div class=\"leftSide\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>left</li>\n\t\t\t\t\t\t<li>menu</li>\n\t\t\t\t\t\t<li>with</li>\n\t\t\t\t\t\t<li>many</li>\n\t\t\t\t\t\t<li>items</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mainContent\">\n\t\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\n\tDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n\n\tUt wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n\n\tNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   \n\n\tDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   \n\n\tAt vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.   \n\n\tConsetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus.   \n\n\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\n\tDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n\n\tUt wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n\n\tNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo\n\t\t\t\t</div>\n\t\t\t\t<div class=\"rightSide\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>right</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"footer\">\n\t\t\t\t<h2>Footer: \n\t\t\t\t\t<span>\t\n\t\t\t\t\t\t<a href=\"#\">Sitemap</a>\n\t\t\t\t\t\t<a href=\"#\">Home</a>\n\t\t\t\t\t\t<a href=\"#\">News</a>\n\t\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/CSS"
        ]
      },
      {
        "heading": "Holy Grail - Grid",
        "name": "Übung 2.3",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Responsiv mit Flexbox Desktop-First</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\thtml, body {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.gridContainer {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template: auto 1fr auto / auto 1fr auto;\n\t\t\t\tmargin: 10px;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tcolor:  white;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.leftSide ul,\n\t\t\t.rightSide ul {\n\t\t\t\tpadding: 0;\n\t\t\t\tlist-style: none;\n\t\t\t}\n\t\t\t.leftSide ul li,\n\t\t\t.rightSide ul li {\n\t\t\t\tfont-size: 20px;\n\t\t\t\tdisplay: inline;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #c04f50;\n\t\t\t\tborder-radius: 10px 10px 0 0;\n\t\t\t\tpadding: 0 5px 15px;\n\t\t\t}\n\t\t\t.header .nav {\n\t\t\t\ttext-align: left;\n\t\t\t\tmargin-top: 10px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-wrap: wrap;\n\t\t\t}\n\t\t\t.header .nav a {\n\t\t\t\tbackground: #6A709F;\n\t\t\t\tcolor: black;\n\t\t\t\tborder-radius: 20px;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tpadding: 4px 30px;\n\t\t\t\tmargin: 3px 5px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-family: Arial;\n\t\t\t\tborder: 2px outset #F9FBFC;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tflex-basis: 10%;\n\t\t\t}\n\t\t\t.header, .footer {\n\t\t\t\tgrid-column: 1 / 4;\n\t\t\t}\n\t\t\t.leftSide, .rightSide {\n\t\t\t\tbackground: #C28280;\n\t\t\t\tgrid-column: 1 / 4;\n\t\t\t}\n\t\t\t.mainContent {\n\t\t\t\tbackground: #6D9FBF;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tgrid-column: 1 / 4;\n\t\t\t}\n\t\t\t.footer {\n\t\t\t\tbackground: black;\n\t\t\t\tpadding-bottom: 15px;\n\t\t\t\tborder-radius: 0 0 10px 10px;\n\t\t\t}\n\t\t\t.footer span {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t.footer a {\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t.gridContainer {\n\t\t\t\t\theight: 95%;\n\t\t\t\t}\n\t\t\t\t.header h2,\n\t\t\t\t.footer h2 {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tfont-weight: normal;\n\t\t\t\t}\n\t\t\t\t.leftSide ul,\n\t\t\t\t.rightSide ul {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\t\t\t\t.leftSide ul li,\n\t\t\t\t.rightSide ul li {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t\t.header .nav {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmargin-top: 0;\n\t\t\t\t}\n\t\t\t\t.leftSide {\n\t\t\t\t\tgrid-column: 1 / 1;\n\t\t\t\t\tpadding: 0 4rem;\n\t\t\t\t}\n\t\t\t\t.mainContent {\n\t\t\t\t\tgrid-column: 2 / 2;\n\t\t\t\t}\n\t\t\t\t.rightSide {\n\t\t\t\t\tgrid-column: 3 / 3;\n\t\t\t\t\tpadding: 0 4rem;\n\t\t\t\t}\n\t\t\t\t.footer span {\n\t\t\t\t\tdisplay: inline;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"gridContainer\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<h2>Header</h2>\n\t\t\t\t<div class=\"nav\">\n\t\t\t\t\t<a href=\"#\">Home</a>\n\t\t\t\t\t<a href=\"#\">News</a>\n\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"leftSide\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>left</li>\n\t\t\t\t\t<li>menu</li>\n\t\t\t\t\t<li>with</li>\n\t\t\t\t\t<li>many</li>\n\t\t\t\t\t<li>items</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"mainContent\">\n\t\t\t\tLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n\nUt wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n\nNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   \n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   \n\nAt vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, At accusam aliquyam diam diam dolore dolores duo eirmod eos erat, et nonumy sed tempor et et invidunt justo labore Stet clita ea et gubergren, kasd magna no rebum. sanctus sea sed takimata ut vero voluptua. est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.   \n\nConsetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus.   \n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n\nUt wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n\nNam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo\n\t\t\t</div>\n\t\t\t<div class=\"rightSide\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>right</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"footer\">\n\t\t\t\t<h2>Footer: \n\t\t\t\t\t<span>\t\n\t\t\t\t\t\t<a href=\"#\">Sitemap</a>\n\t\t\t\t\t\t<a href=\"#\">Home</a>\n\t\t\t\t\t\t<a href=\"#\">News</a>\n\t\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/CSS"
        ]
      },
      {
        "heading": "Responsiv mit Grid",
        "name": "Übung 2.4",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Product Landing Page</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\thtml, body {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.gridContainer {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template: auto auto 1fr auto / 1fr 1fr;\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t.button {\n\t\t\t\ttext-decoration: none;\n\t\t\t\tbackground: #F88E37;\n\t\t\t\tcolor: white;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth:  70%;\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tmargin:  0 auto;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #363636;\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 20px 0;\n\t\t\t\tgrid-column: 1 / 3;\n\t\t\t}\n\t\t\t.nav {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t\t}\n\t\t\t.header a {\n\t\t\t\tcolor: white;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tmargin: 5px 0;\n\t\t\t}\n\t\t\t.heading {\n\t\t\t\tgrid-column: 1 / 3;\n\t\t\t\tmargin: 30px 0 0;\n\t\t\t}\n\t\t\t.heading h1 {\n\t\t\t\tmargin: 0 0 20px;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.mainContent {\n\t\t\t\tbackground: #EBEAE6;\n\t\t\t\tpadding: 20px 0 10px;\n\t\t\t}\n\t\t\t.imgContainer {\n\t\t\t\tgrid-column: 1 / 3;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\t\t\t.imgContainer img {\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tborder: 1px solid #000;\n\t\t\t\tmax-width: 70%;\n\t\t\t}\n\t\t\t.info {\n\t\t\t\ttext-align: center;\n\t\t\t\tpadding: 20px 0;\n\t\t\t\tgrid-column: 1 / 3;\n\t\t\t}\n\t\t\t.info p {\n\t\t\t\tmargin:  30px 0;\n\t\t\t}\n\t\t\t.footer {\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground: #011826;\n\t\t\t\tcolor: white;\n\t\t\t\tpadding:  1px 0 30px;\n\t\t\t\tgrid-column: 1 / 3;\n\t\t\t}\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t.button {\n\t\t\t\t\twidth: 50%;\n\t\t\t\t}\n\t\t\t\t.nav {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t\t.header .nav a {\n\t\t\t\t\tmargin: 0 10px;\n\t\t\t\t}\n\t\t\t\t.imgContainer {\n\t\t\t\t\tgrid-column: 1 / 1;\n\t\t\t\t}\n\t\t\t\t.info {\n\t\t\t\t\tgrid-column: 2 / 2;\n\t\t\t\t}\n\t\t\t\t.info p {\n\t\t\t\t\tmargin:  50px 0;\n\t\t\t\t}\n\t\t\t\t.footer {\n\t\t\t\t\tpadding-top: 30px;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"gridContainer\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<div class=\"nav\">\n\t\t\t\t\t<a href=\"#\">The book series</a>\n\t\t\t\t\t<a href=\"#\">Textimonials</a>\n\t\t\t\t\t<a href=\"#\">The Author</a>\n\t\t\t\t\t<a href=\"#\">Free resources</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"heading\">\n\t\t\t\t<h1>You dont know JavaScript</h1>\n\t\t\t</div>\n\t\t\t<div class=\"imgContainer\">\n\t\t\t\t<img alt=\"product-cover\" src=\"img/landing-img.png\" />\n\t\t\t</div>\n\t\t\t<div class=\"info\">\n\t\t\t\t<p>Don't just drift through Javascript.</p>\n\t\t\t\t<p>Understand how Javascript works</p>\n\t\t\t\t<p>Start your journey through the bumpy side of Javascript</p>\n\t\t\t\t<a href=\"#\" class=\"button\">Order your copy now</a>\n\t\t\t</div>\n\t\t\t<div class=\"footer\">\n\t\t\t\t<p>The first ebook in the book series is absolutely free.</p>\n\t\t\t\t<a href=\"#\" class=\"button\">Find out more about this offer</a>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/CSS"
        ]
      }
    ]
  },
  {
    "name": "Übung 3",
    "items": [
      {
        "heading": "Funktionen in JavaScript",
        "name": "Übung 3.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Funktionen in JavaScript</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t\twidth: 66%;\n\t\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: #ddd;\n\t\t\t}\n\t\t\th3 {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tpre {\n\t\t\t\tbackground: rgb(51, 51, 51);\n\t\t\t\tpadding: 5px 20px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tcolor: #fff;\n\t\t\t\twhite-space: pre-wrap;\n\t\t\t}\n\t\t\tspan.highlighted {\n\t\t\t\tcolor: #c73030;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Funktionen in JavaScript</h1>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">identity_function()</span>, die ein Argument als Parameter entgegen nimmt und\n\t\t\t\teine Funktion zurück gibt, die dieses Argument zurück gibt.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction identity_function(param) {\n    return () => param;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Addier-Funktion <span class=\"highlighted\">addf()</span>, so dass <span class=\"highlighted\">addf(x)(y)</span>\n\t\t\t\tgenau <span class=\"highlighted\">x + y</span> zurück gibt. (Es haben alsozwei Funktionsaufrufe zu erfolgen.\n\t\t\t\t<span class=\"highlighted\">addf(x)</span> liefert eine Funktion, die auf y angewandt wird.)</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction addf(x) {\n    return y => {\n        return x + y;\n    };\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">applyf()</span>, die aus einer binären Funktion\n\t\t\t\twie <span class=\"highlighted\">add(x,y)</span> eine Funktion <span class=\"highlighted\">addf</span>\n\t\t\t\tberechnet, die mit zwei Aufrufen das gleiche Ergebnis liefert, z.B. <span class=\"highlighted\">addf = applyf(add);\n\t\t\t\taddf(x)(y)</span> soll <span class=\"highlighted\">add(x,y)</span> liefern. Entsprechend\n\t\t\t\t<span class=\"highlighted\">applyf(mul)(5)(6)</span> soll <span class=\"highlighted\">30</span> liefern,\n\t\t\t\twenn <span class=\"highlighted\">mul</span> die binäre Multiplikation ist.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction applyf(functionName) {\n    return x => y => functionName(x, y);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">curry()</span> (von Currying), die eine binäre\n\t\t\t\tFunktion und ein Argument nimmt, um daraus eine Funktion zu erzeugen, die ein zweites Argument entgegen nimmt, z.B.\n\t\t\t\t<span class=\"highlighted\">add3 = curry(add, 3);add3(4)</span> ergibt <span class=\"highlighted\">7</span>.\n\t\t\t\t<span class=\"highlighted\">curry(mul, 5)(6)</span> ergibt <span class=\"highlighted\">30</span>.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction curry(functionName, param) {\n    return param2 => functionName(param, param2);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Erzeugen Sie die <span class=\"highlighted\">inc</span>-Funktion mit Hilfe einer der Funktionen\n\t\t\t\t<span class=\"highlighted\">addf, applyf</span> und <span class=\"highlighted\">curry</span> aus den\n\t\t\t\tletzten Aufgaben, ohne die Funktion <span class=\"highlighted\">inc()</span> selbst zu implementieren.\n\t\t\t\t(<span class=\"highlighted\">inc(x)</span> soll immer <span class=\"highlighted\">x + 1</span> ergeben\n\t\t\t\tund lässt sich natürlich auch direkt implementieren. Das ist aber hier nicht die Aufgabe.)\n\t\t\t\tVielleicht schaffen Sie es auch, drei Varianten der <span class=\"highlighted\">inc()</span>-Implementierung\n\t\t\t\tzu schreiben?</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction inc_addf(param) {\n    return addf(param)(1);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">methodize()</span>, die eine binäre Funktion (z.B. add, mul) in eine\n\t\t\t\tunäre Methode verwandelt. Nach Number.prototype.add = methodize(add); soll (3).add(4) genau 7 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction methodize(functionName) {\n    return function (param) {\n        return functionName(this, param);\n    }\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">demethodize()</span>, die eine unäre Methode (z.B. add, mul) in eine\n\t\t\t\tbinäre Funktion umwandelt. demethodize(Number.prototype.add)(5, 6) soll 11 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction demethodize(functionName) {\n    return (x, y) => functionName.call(x, y);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">twice()</span>, die eine binäre Funktion in eine unäre Funktion umwandelt,\n\t\t\t\tdie den einen Parameter zweimal weiter reicht. Z.B. var double = twice(add); double(11) soll\n\t\t\t\t22 ergeben; var square = twice(mul); square(11) soll mul(11,11) === 121 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction twice(functionName) {\n    return x => functionName(x, x);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">composeu()</span>, die zwei unäre Funktionen in eine einzelne unäre\n\t\t\t\tFunktion transformiert, die beide nacheinander aufruft, z.B. soll composeu(double, square)(3)\n\t\t\t\tgenau 36 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction composeu(function1, function2) {\n    return x => function2(function1(x));\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">composeb()</span>, die zwei binäre Funktionen in eine einzelne\n\t\t\t\tFunktion transformiert, die beide nacheinander aufruft, z.B. composeb(add, mul)(2, 3, 5) soll\n\t\t\t\t25 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction composeb(function1, function2) {\n    return (x, y, z) => function2(function1(x, y), z);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Funktion <span class=\"highlighted\">once()</span>, die einer anderen Funktion nur einmal erlaubt,\n\t\t\t\taufgerufen zu werden, z.B. add_once = once(add); add_once(3, 4) soll beim ersten Mal 7\n\t\t\t\tergeben, beim zweiten Mal soll jedoch add_once(3, 4) einen Fehlerabbruch bewirken.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction once(functionName) {\n    let executed = false;\n    return new Proxy(functionName, {\n        apply: function(receiver, ...args) {\n            if (executed) {\n                throw 'Die Funtktion darf nur einmal aufgerufen werden';\n            }\n            executed = true;\n            return functionName(...args[1]);\n        }\n    });\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine Fabrik-Funktion <span class=\"highlighted\">counterf()</span>, die zwei Funktionen inc() und dec() berechnet,\n\t\t\t\tdie einen Zähler hoch- und herunterzählen. Z.B. counter = counterf(10); Dann soll counter.inc()\n\t\t\t\t11 und counter.dec() wieder 10 ergeben.</h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction counterf(counterNumber) {\n    const counterObj = {\n        counter: counterNumber,\n        inc: function() {\n            this.counter++;\n            return this.counter;\n        },\n        dec: function() {\n            this.counter--;\n            return this.counter;\n        }\n    };\n    return counterObj;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Schreiben Sie eine rücknehmbare Funktion <span class=\"highlighted\">revocable()</span>, die als Parameter eine Funktion nimmt und\n\t\t\t\tdiese bei Aufruf ausführt. Sobald die Funktion aber mit <span class=\"highlighted\">revoke()</span> zurück genommen wurde, führt ein\n\t\t\t\terneuter Aufruf zu einem Fehler. Z.B. <br>\n\t\t\t\t<span class=\"highlighted\">temp = revocable(alert); <br>\n\t\t\t\ttemp.invoke(7); // führt zu alert(7); <br>\n\t\t\t\ttemp.revoke(); <br>\n\t\t\t\ttemp.invoke(8); // Fehlerabbruch!</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction revocable(functionName) {\n    const revokeableObj = {\n        revoked: false,\n        revoke: function() {\n            this.revoked = true;\n        },\n        invoke: function() {\n            if (this.revoked) {\n                throw 'Die Funktion wurde zurückgenommen';\n            }\n            return functionName(...arguments);\n        }\n    }\n    return revokeableObj;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Implementieren Sie ein \"Array Wrapper\"-Objekt mit den Methoden get, store und append, so dass\n\t\t\t\tein Angreifer keinen Zugriff auf das innere, private Array hat. <br>\n\t\t\t\t<span class=\"highlighted\">my_vector = vector(); <br>\n\t\t\t\tmy_vector.append(7); <br>\n\t\t\t\tmy_vector.store(1, 8); <br>\n\t\t\t\tmy_vector.get(0) // 7 <br>\n\t\t\t\tmy_vector.get(1) // 8</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction vector() {\n    const vectorObj = {\n        privateArray: [],\n        get: function(index) {\n            return this.privateArray[index]\n        },\n        store: function(index, number) {\n            this.privateArray[index] = number;\n        },\n        append: function(number) {\n            this.privateArray[this.privateArray.length] = number;\n        }\n    };\n    return vectorObj;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t</body>\n</html>",
            "type": "Javascript",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Web/JavaScript"
        ]
      },
      {
        "heading": "Advanced Functional JavaScript Programming",
        "name": "Übung 3.2",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Advanced Functional JavaScript Programming</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #fff;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 30px;\n\t\t\t\twidth: 66%;\n\t\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: #ddd;\n\t\t\t}\n\t\t\th3 {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tpre {\n\t\t\t\tbackground: rgb(51, 51, 51);\n\t\t\t\tpadding: 5px 20px;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tcolor: #fff;\n\t\t\t\twhite-space: pre-wrap;\n\t\t\t}\n\t\t\tspan.highlighted {\n\t\t\t\tcolor: #c73030;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Funktionen in JavaScript</h1>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that makes a publish/subscribe object. It will reliably deliver all publications to\n\t\t\t\tall subscribers in the right order. <br>\n\t\t\t\t<span class=\"highlighted\">my_pubsub = pubsub(); <br>\n\t\t\t\tmy_pubsub.subscribe(alert); <br>\n\t\t\t\tmy_pubsub.publish(\"It works!\"); // alert(\"It works!\")</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction pubsub() {\n    const pubsubObj = {\n        subscriptions: [],\n        subscribe: function(subscriber) {\n            this.subscriptions.push(subscriber);\n        },\n        publish: function(param) {\n            for (const subscription of this.subscriptions) {\n                subscription(param);\n            }\n        }\n    }\n    return pubsubObj;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a factory that makes functions that generate unique symbols. <br>\n\t\t\t\t<span class=\"highlighted\">gensym = gensymf('G'); <br>\n\t\t\t\tgensym() // 'G0' <br>\n\t\t\t\tgensym() // 'G1' <br>\n\t\t\t\tgensym() // 'G2' <br>\n\t\t\t\tgensym() // 'G3'</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction gensymf(prefix) {\n    let counter = 0;\n    return () => `${prefix}${counter++}`;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that returns a function that will return the next fibonacci number. <br>\n\t\t\t\t<span class=\"highlighted\">var fib = fibonaccif(0, 1); <br>\n\t\t\t\tfib() // 0 <br>\n\t\t\t\tfib() // 1 <br>\n\t\t\t\tfib() // 1 <br>\n\t\t\t\tfib() // 2 <br>\n\t\t\t\tfib() // 3 <br>\n\t\t\t\tfib() // 5</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction fibonaccif(param1, param2) {\n    let firstParam = param1;\n    let secondParam = param2;\n    return () => {\n        let result = firstParam;\n        firstParam = secondParam;\n        secondParam += result;\n        return result;\n    }\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function that adds from many invocations, until it sees an empty invocation. <br>\n\t\t\t\t<span class=\"highlighted\">addg(3)(4)(5)() // 12 <br>\n\t\t\t\taddg(1)(2)(4)(8)() // 15</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction addg(param) {\n    return nextParam => nextParam ? addg(param + nextParam) : param;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function that will take a binary function and apply it to many invocations. <br>\n\t\t\t\t<span class=\"highlighted\">applyg(add)(3)(4)(5)() // 12 <br>\n\t\t\t\tapplyg(add)(1)(2)(4)(8)() // 15</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction applyg(functionName, number, result) {\n    return functionName.call\n        ? option1 => applyg(option1, functionName, option1)\n        : option2 => option2\n            ? applyg(number(functionName, option2), number, number(functionName, option2))\n            : result\n        ;\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function <span class=\"highlighted\">m</span> that takes a value and an optional source string and returns them in an object. <br>\n\t\t\t\t<span class=\"highlighted\">JSON.stringify(m(1)) // {\"value\": 1, \"source\": \"1\"} <br>\n\t\t\t\tJSON.stringify(m(Math.PI, \"pi\")) // {\"value\": 3.14159..., \"source\": \"pi\"}</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction m(value, source) {\n    return {\n        value: value,\n        source: source ? source : value.toString()\n    };\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function <span class=\"highlighted\">addm</span> that takes two m objects and returns an\n\t\t\t\t<span class=\"highlighted\">m</span> object. <br>\n\t\t\t\t<span class=\"highlighted\">JSON.stringify(addm(m(3), m(4))) // {\"value\": 7, \"source\": \"(3+4)\"}</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction addm(object1, object2) {\n    const source1 = object1.source ? object1.source : object1.value;\n    const source2 = object2.source ? object2.source : object2.value;\n    return {\n        value: (object1.value + object2.value),\n        source: `(${source1}+${source2})`\n    };\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function <span class=\"highlighted\">binarymf</span> that takes a binary function and a string and returns a function that acts on m objects. <br>\n\t\t\t\t<span class=\"highlighted\">addm = binarymf(add, \"+\"); <br>\n\t\t\t\tJSON.stringify(addm(m(3), m(4))) // {\"value\": 7, \"source\": \"(3+4)\"}</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction binarymf(functionname, operator) {\n    return (x, y) => ({ value: functionname(x.value, y.value), source: `(${x.value}${operator}${y.value})` });\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Modify function <span class=\"highlighted\">binarymf</span> so that the functions it produces can accept arguments that are either numbers or m objects. <br>\n\t\t\t\t<span class=\"highlighted\">addm = binarymf(add, \"+\"); <br>\n\t\t\t\tJSON.stringify(addm(3, 4)) // {\"value\": 7, \"source\": \"(3+4)\"}</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction binarymf(functionName, operator) {\n    return (x, y) => {\n        return {\n            value: functionName(x.value || x, y.value || y),\n            source: `(${x.value || x}${operator}${y.value || y})`\n        }\n    };\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write function <span class=\"highlighted\">unarymf</span>, which is like <span class=\"highlighted\">binarymf</span>\n\t\t\t\texcept that it acts on unary functions. <br>\n\t\t\t\t<span class=\"highlighted\">squarem = unarymf(square, \"square\"); <br>\n\t\t\t\tJSON.stringify(squarem(4)) // {\"value\": 16, \"source\": \"(square 4)\"}</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction unarymf(functionName, operation) {\n    return (x) => ({ value: functionName(x.value || x), source: `(${operation} ${x.value || x})` });\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function that takes the lengths of two sides of a triangle and computes the length of the hypotenuse. (Hint: c2 = a2 + b2) <br>\n\t\t\t\t<span class=\"highlighted\">hyp(3, 4) // 5</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction hyp(side1, side2) {\n    return Math.hypot(side1, side2);\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Write a function that evaluates array expressions. <br>\n\t\t\t\t<span class=\"highlighted\">hypa = [ Math.sqrt, [ add, [mul, 3, 3], [mul, 4, 4] ] ]; <br>\n\t\t\t\texp(hypa) // 5</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction exp(array) {\n    return array[0](...array.slice(1).map(element => Array.isArray(element) ? exp(element) : element));\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that stores a value in a variable. <br>\n\t\t\t\t<span class=\"highlighted\">var variable; store(5); // variable === 5</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction store(newVariable) {\n    variable = newVariable\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that takes a binary function, two functions that provide operands, and a function that takes the result. <br>\n\t\t\t<span class=\"highlighted\">quatre( add, identityf(3), identityf(4), store ); // variable === 7</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction quatre(functionName, operand1, operand2, resultFunction) {\n    resultFunction(functionName(operand1(), operand2()))\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that takes a unary function, and returns a function that takes an argument and a callback. <br>\n\t\t\t<span class=\"highlighted\">sqrtc = unaryc(Math.sqrt); sqrtc(81, store) // variable === 9</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction unaryc(functionName) {\n    return (param, callbackFunktion) => {\n        callbackFunktion(functionName(param))\n    }\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h3>Make a function that takes a binary function, and returns a function that takes two arguments and a callback. <br>\n\t\t\t\t<span class=\"highlighted\">addc = binaryc(add); addc(4, 5, store) // variable === 9 <br>\n\t\t\t\tmulc = binaryc(mul); mulc(2, 3, store) // variable === 6</span></h3>\n\t\t\t<pre>\n\t\t\t\t<code>\nfunction binaryc(functionName) {\n    return (x, y, callback) => {\n        callback(functionName(x, y));\n    }\n}</code>\n\t\t\t</pre>\n\t\t</div>\n\t</body>\n</html>\n",
            "type": "Javascript",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [
          "https://developer.mozilla.org/de/docs/Learn/JavaScript"
        ]
      }
    ]
  },
  {
    "name": "Übung 4",
    "items": [
      {
        "heading": "Einkaufsliste",
        "name": "Übung 4.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Einkaufsliste</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Einkaufsliste</h1>\n\t\t<div class=\"newItemHandler\">\n\t\t\t<p>\n\t\t\t\tEnter a new item:\n\t\t\t\t<input type=\"text\" class=\"itemName\" value=\"\" />\n\t\t\t\t<button class=\"addItem\">Add item</button>\n\t\t\t</p>\n\t\t</div>\n\t\t<ul class=\"shoppingList\">\n\t\t\t\n\t\t</ul>\n\t\t<script>\n\t\t\tfunction addItem() {\n\t\t\t\tconst shoppingList = document.querySelector('ul.shoppingList');\n\t\t\t\tconst inputField = document.querySelector('input.itemName');\n\t\t\t\tconst itemName = inputField.value;\n\t\t\t\tconst newItem = generateNewItem(itemName);\n\n\t\t\t\tshoppingList.appendChild(newItem);\n\n\t\t\t\t// add delete funcionality to each item in list\n\t\t\t\tconst deleteButtons = shoppingList.querySelectorAll('button');\n\t\t\t\tlet counter = 0;\n\t\t\t\tfor (button of deleteButtons) {\n\t\t\t\t\tbutton.addEventListener('click', deleteItem);\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction deleteItem() {\n\t\t\t\tconst shoppingList = document.querySelector('ul.shoppingList');\n\t\t\t\tconst item = this.parentNode;\n\t\t\t\tshoppingList.removeChild(item);\n\t\t\t}\n\n\t\t\tfunction generateNewItem(itemName) {\n\t\t\t\tconst newItem = document.createElement('li');\n\t\t\t\tconst contentItem = document.createTextNode(itemName + ' ');\n\t\t\t\tconst button = document.createElement('button');\n\t\t\t\tconst contentButton = document.createTextNode('Delete');\n\n\t\t\t\tnewItem.appendChild(contentItem);\n\t\t\t\tbutton.appendChild(contentButton);\n\t\t\t\tnewItem.appendChild(button);\n\n\t\t\t\treturn newItem;\n\t\t\t}\n\n\t\t\tfunction init() {\n\t\t\t\tconst inputField = document.querySelector('input.itemName');\n\t\t\t\tconst buttonAddItem = document.querySelector('button.addItem');\n\t\t\t\tinputField.addEventListener('keyup', function(event) {\n\t\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\t\taddItem();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbuttonAddItem.addEventListener('click', addItem);\n\t\t\t}\n\n\t\t\tinit();\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "Rednerliste",
        "name": "Übung 4.2",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Rednerliste</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Rednerliste</h1>\n\t\t<div class=\"newSpeakerHandler\">\n\t\t\t<p>\n\t\t\t\tNeuer Redner:\n\t\t\t\t<input type=\"text\" class=\"speakerName\" value=\"\" />\n\t\t\t\t<button class=\"addSpeaker\">Hinzufügen</button>\n\t\t\t</p>\n\t\t</div>\n\t\t<ul class=\"speakers\">\n\t\t\t\n\t\t</ul>\n\t\t<script>\n\t\t\tfunction addSpeaker() {\n\t\t\t\tconst speakers = document.querySelector('ul.speakers');\n\t\t\t\tconst inputField = document.querySelector('input.speakerName');\n\t\t\t\tconst speakerName = inputField.value;\n\t\t\t\tconst newSpeaker = generateNewSpeaker(speakerName);\n\t\t\t\tspeakers.appendChild(newSpeaker);\n\t\t\t\tstartTimer(newSpeaker);\n\t\t\t}\n\n\t\t\tfunction generateNewSpeaker(speakerName) {\n\t\t\t\tconst newSpeaker = document.createElement('li');\n\t\t\t\tconst contentSpeaker = document.createTextNode(speakerName + ' ');\n\t\t\t\tconst timer = document.createElement('span');\n\t\t\t\tconst contentTimer = document.createTextNode('00:00:00 ');\n\t\t\t\tconst button = document.createElement('button');\n\t\t\t\tconst contentButton = document.createTextNode('Stop!');\n\t\t\t\tnewSpeaker.appendChild(contentSpeaker);\n\t\t\t\tnewSpeaker.dataset.time = 0.0;\n\t\t\t\tbutton.appendChild(contentButton);\n\t\t\t\tbutton.dataset.running = \"1\";\n\t\t\t\tbutton.addEventListener('click', execTimerAction);\n\t\t\t\ttimer.appendChild(contentTimer);\n\t\t\t\tnewSpeaker.appendChild(timer);\n\t\t\t\tnewSpeaker.appendChild(button);\n\t\t\t\treturn newSpeaker;\n\t\t\t}\n\n\t\t\tfunction startTimer(newSpeaker) {\n\t\t\t\tconst speakers = document.querySelector('ul.speakers');\n\t\t\t\tlet currentTime = newSpeaker.dataset.time;\n\t\t\t\tlet running = newSpeaker.querySelector('button').dataset.running;\n\n\t\t\t\tfor (speaker of speakers.querySelectorAll('li')) {\n\t\t\t\t\tspeaker.querySelector('button').dataset.running = \"0\";\n\t\t\t\t\tspeaker.querySelector('button').innerHTML = 'Start!';\n\t\t\t\t}\n\t\t\t\tnewSpeaker.querySelector('button').dataset.running = \"1\";\n\t\t\t\tnewSpeaker.querySelector('button').innerHTML = 'Stop!';\n\n\t\t\t\tconst interval = setInterval(function() {\n\t\t\t\t\tcurrentTime++;\n\t\t\t\t\tnewSpeaker.dataset.time = currentTime;\n\t\t\t\t\tconst timeOutput = newSpeaker.querySelector('span');\n\t\t\t\t\ttimeOutput.innerHTML = getTimerOutput(currentTime);\n\t\t\t\t\trunning = newSpeaker.querySelector('button').dataset.running;\n\t\t\t\t\tif(running == \"0\") {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t}\n\n\t\t\tfunction execTimerAction() {\n\t\t\t\tconst speaker = this.parentElement;\n\t\t\t\tif (this.dataset.running == \"1\") {\n\t\t\t\t\tthis.dataset.running = \"0\";\n\t\t\t\t\tthis.innerHTML = 'Start!';\n\t\t\t\t} else {\n\t\t\t\t\tthis.dataset.running = \"1\";\n\t\t\t\t\tthis.innerHTML = 'Stop!';\n\t\t\t\t\tstartTimer(speaker);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getTimerOutput(seconds) {\n\t\t\t\tconst minutes = Math.floor(seconds / 60);\n\t\t\t\tconst hours = Math.floor(minutes / 60);\n\t\t\t\tseconds = seconds - minutes * 60;\n\t\t\t\treturn `${hours < 10 ? '0' : ''}${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds} `;\n\t\t\t}\n\n\t\t\tfunction stopTimer(speaker) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\n\t\t\tfunction init() {\n\t\t\t\tconst inputField = document.querySelector('input.speakerName');\n\t\t\t\tconst buttonAddSpeaker = document.querySelector('button.addSpeaker');\n\t\t\t\tinputField.addEventListener('keyup', function(event) {\n\t\t\t\t\tif (event.keyCode === 13) {\n\t\t\t\t\t\taddSpeaker();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbuttonAddSpeaker.addEventListener('click', addSpeaker);\n\t\t\t}\n\n\t\t\tinit();\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "Tabellenkalkulation",
        "name": "Übung 4.3",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Tabellenkalkulation mit contentEditable</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\ttable {\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\ttd {\n\t\t\t\tborder: 1px solid #000;\n\t\t\t\twidth: 200px;\n\t\t\t\theight: 25px;\n\t\t\t\ttext-align: right;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Tabellenkalkulation mit contentEditable</h1>\n\t\t<div class=\"spreadsheet\">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t\t<td contenteditable></td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<script>\n\t\t\tfunction calculateResult() {\n\t\t\t\tconst currentTableCell = this;\n\t\t\t\tif (this.textContent.indexOf(\"=SUM\") >= 0) {\n\t\t\t\t\tthis.dataset.calculation = this.textContent;\n\t\t\t\t\tconst param1 = this.textContent.substring(\n\t\t\t\t\t\tthis.textContent.indexOf(\"(\") + 1,\n\t\t\t\t\t\tthis.textContent.lastIndexOf(\":\")\n\t\t\t\t\t);\n\t\t\t\t\tconst param2 = this.textContent.substring(\n\t\t\t\t\t\tthis.textContent.indexOf(\":\") + 1,\n\t\t\t\t\t\tthis.textContent.lastIndexOf(\")\")\n\t\t\t\t\t);\n\t\t\t\t\tconst cell1 = getColumn(param1);\n\t\t\t\t\tconst cell2 = getColumn(param2);\n\t\t\t\t\tthis.textContent = sum(parseInt(cell1.textContent), parseInt(cell2.textContent));\n\t\t\t\t}\n\t\t\t}\n\n\n\n\t\t\tfunction getColumn(identifier) {\n\t\t\t\tconst row = parseInt(identifier.substring(0, 1), 36) - 10;\n\t\t\t\tconst column = identifier.substring(1) - 1;\n\t\t\t\tconst tableRow = document.querySelectorAll('table tr').item(row);\n\t\t\t\tconst tableCell = tableRow.querySelectorAll('td').item(column);\n\t\t\t\treturn tableCell;\n\t\t\t}\n\n\t\t\tfunction sum(x, y) {\n\t\t\t\treturn x + y;\n\t\t\t}\n\n\t\t\tfunction init() {\n\t\t\t\tconst tableCells = document.querySelectorAll('.spreadsheet table td');\n\t\t\t\tfor (tableCell of tableCells) {\n\t\t\t\t\ttableCell.addEventListener('focus', function() {\n\t\t\t\t\t\tif (this.dataset.calculation) {\n\t\t\t\t\t\t\tthis.textContent = this.dataset.calculation;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\ttableCell.addEventListener('blur', calculateResult);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinit();\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "HTML-Editor",
        "name": "Übung 4.4",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>HTML-Editor</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t  margin: 0 auto;\n\t\t\t  width: 600px;\n\t\t\t  font-family: 'Arial';\n\t\t\t  background: #fff;\n\t\t\t}\n\t\t\t.icon {\n\t\t\t\twidth: 24px;\n\t\t\t\theight: 24px;\n\t\t\t}\n\t\t\t.fore-palette,\n\t\t\t.back-palette {\n\t\t\t  display: none;\n\t\t\t}\n\n\t\t\t.fore-wrapper:hover .fore-palette,\n\t\t\t.back-wrapper:hover .back-palette {\n\t\t\t  display: block;\n\t\t\t  float: left;\n\t\t\t  position: absolute;\n\t\t\t}\n\t\t\t.toolbar a,\n\t\t\t.fore-wrapper {\n\t\t\t  border: 1px solid #AAA;\n\t\t\t  background: #FFF;\n\t\t\t  font-family: 'Arial black';\n\t\t\t  border-radius: 1px;\n\t\t\t  color: black;\n\t\t\t  padding: 5px;\n\t\t\t  width: 1.5em;\n\t\t\t  margin: -2px;\n\t\t\t  margin-top: 10px;\n\t\t\t  display: inline-block;\n\t\t\t  text-decoration: none;\n\t\t\t  box-shadow: 0px 1px 0px #CCC;\n\t\t\t}\n\t\t\t.toolbar a:hover,\n\t\t\t.fore-wrapper:hover {\n\t\t\t  background: #f2f2f2;\n\t\t\t  border-color: #8c8c8c;\n\t\t\t}\n\t\t\t#editor {\n\t\t\t  box-shadow: 0 0 2px #CCC;\n\t\t\t  min-height: 150px;\n\t\t\t  overflow: auto;\n\t\t\t  padding: 1em;\n\t\t\t  margin-top: 20px;\n\t\t\t  resize: vertical;\n\t\t\t  outline: none;\n\t\t\t}\n\t\t\t.toolbar a.small-icon {\n\t\t\t\tpadding-top: 12px;\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>HTML-Editor</h1>\n\t\t<div class=\"htmlEditor\">\n\t\t\t<div class=\"toolbar\">\n\t\t\t\t<a href=\"#\" data-command='undo'><img class=\"icon\" src=\"img/undo.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='createlink'><img class=\"icon\" src=\"img/link.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='justifyLeft'><img class=\"icon\" src=\"img/align-left.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='superscript'><img class=\"icon\" src=\"img/superscript.svg\" /></a>\n\t\t\t\t<div class=\"fore-wrapper\"><img class=\"icon\" src=\"img/font.svg\" />\n\t\t\t\t  <div class=\"fore-palette\">\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\t<a class=\"small-icon\" href=\"#\" data-command='h1'>H1</a>\n\t\t\t\t<a class=\"small-icon\" href=\"#\" data-command='h2'>H2</a>\n\t\t\t\t<a class=\"small-icon\" href=\"#\" data-command='p'>P</a>\n\t\t\t\t<a href=\"#\" data-command='bold'><img class=\"icon\" src=\"img/bold.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='italic'><img class=\"icon\" src=\"img/italic.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='underline'><img class=\"icon\" src=\"img/underline.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='strikeThrough'><img class=\"icon\" src=\"img/strikethrough.svg\" /></a>\n\t\t\t\t<a href=\"#\" data-command='insertUnorderedList'><img class=\"icon\" src=\"img/list-ul.svg\" /></a>\n  \t\t\t\t<a href=\"#\" data-command='insertOrderedList'><img class=\"icon\" src=\"img/list-ol.svg\" /></a>\n  \t\t\t\t<a href=\"#\" data-command='insertimage'><img class=\"icon\" src=\"img/image.svg\" /></a>\n\t\t\t</div>\n\t\t\t<div id='editor' contenteditable>\n\t\t\t  <h1>A WYSIWYG Editor.</h1>\n\t\t\t  <p>Try making some changes here. Add your own text or maybe an image.</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tfunction init() {\n\t\t\t\tconst colorPalette = ['000000', 'FF9966', '6699FF', '99FF66','CC0000', '00CC00', '0000CC', '333333', '0066FF', 'FFFFFF'];\n\n\t\t\t\tconst forePalette = document.querySelector('.fore-palette');\n\n\t\t\t\tfor (var i = 0; i < colorPalette.length; i++) {\n\t\t\t\t\tconst forecolorCommand = document.createElement('a');\n\t\t\t\t\tforecolorCommand.setAttribute('href', '#');\n\t\t\t\t\tforecolorCommand.setAttribute('class', 'palette-item');\n\t\t\t\t\tforecolorCommand.dataset['command'] = 'forecolor';\n\t\t\t\t\tforecolorCommand.dataset['value'] = '#' + colorPalette[i];\n\t\t\t\t\tforecolorCommand.style.backgroundColor = '#' + colorPalette[i];\n\t\t\t\t\tforePalette.appendChild(forecolorCommand);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction handleToolbarCommands() {\n\t\t\t\tconst toolbarCommands = document.querySelectorAll('.toolbar a');\n\t\t\t\tfor(const toolbarCommand of toolbarCommands) {\n\t\t\t\t\ttoolbarCommand.addEventListener('click', function (e) {\n\t\t\t\t\t\tconst command = this.dataset.command;\n\t\t\t\t\t\tconst value = this.dataset.value;\n\n\t\t\t\t\t\tif (command == 'h1' || command == 'h2' || command == 'p') {\n\t\t\t\t\t\t\tdocument.execCommand('formatBlock', false, command);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command == 'forecolor' || command == 'backcolor') {\n\t\t\t\t\t\t\tdocument.execCommand(command, false, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (command == 'createlink' || command == 'insertimage') {\n\t\t\t\t\t\t\turl = prompt('Enter the link here: ','http:\\/\\/');\n\t\t\t\t\t\t\tdocument.execCommand(command, false, url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse document.execCommand(command, false, null);\n\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinit();\n\t\t\thandleToolbarCommands();\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      }
    ]
  },
  {

    "name": "Übung 5",
    "items": [
      {
        "heading": "Promises",
        "name": "Übung 5.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Promises</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\tspan.left {\n\t\t\t\tcolor: red;\n\t\t\t}\n\t\t\tspan.right {\n\t\t\t\tcolor: green;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Promises</h1>\n\t\t<div class=\"promisesOutput\">\n\t\t\t\n\t\t</div>\n\t\t<script>\n\t\t\tfunction getPromiseOutput(promiseOutput) {\n\t\t\t\tPromise.all([\n\t\t\t\t\tfetch('data/A.txt'),\n\t\t\t\t\tfetch('data/B.txt')\n\t\t\t\t]).then(responses => {\n\t\t\t\t\tif (responses.filter(response => response.status === 'rejected').length > 0) {\n\t\t\t\t\t\treturn Promise.reject('Laden der Daten fehlgeschlagen');\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.all(responses.map(response => response.text()))\n\t\t\t\t}).then(texts => {\n\t\t\t\t\tconst textLines = texts.map(t => t.split(/\\r\\n|\\n|\\r/gm));\n\t\t\t\t\tconst maxLines = textLines[0].length > textLines[1].length ? textLines[0].length : textLines[1].length;\n\t\t\t\t\toutput = '';\n\t\t\t\t\tfor (let i = 0; i < maxLines; i++) {\n\t\t\t\t\t\toutput += `<span class=\"left\">${textLines[0][i] || ''}</span> <span class=\"right\">${textLines[1][i] || ''}</span><br>`;\n\t\t\t\t\t}\n\t\t\t\t\tpromiseOutput.innerHTML = output;\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}).catch(error => console.error(error));\n\t\t\t}\n\n\t\t\tfunction init() {\n\t\t\t\tconst promiseOutput = document.querySelector('.promisesOutput');\n\t\t\t\tgetPromiseOutput(promiseOutput);\n\t\t\t}\n\n\t\t\tinit()\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "async / await",
        "name": "Übung 5.2",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Promises</title>\n    <meta charset=\"utf-8\">\n    <style>\n        body {\n            background: #fff;\n        }\n        span.left {\n            color: red;\n        }\n        span.right {\n            color: green;\n        }\n    </style>\n</head>\n<body>\n<h1>Promises</h1>\n<div class=\"promisesOutput\">\n\n</div>\n<script>\n    async function getPromiseOutput(promiseOutput) {\n        try {\n            const texts = [\n                await (await fetch('data/A.txt')).text(),\n                await (await fetch('data/B.txt')).text()\n            ];\n            const textLines = texts.map(t => t.split(/\\r\\n|\\n|\\r/gm));\n            const maxLines = textLines[0].length > textLines[1].length ? textLines[0].length : textLines[1].length;\n            output = '';\n            for (let i = 0; i < maxLines; i++) {\n                output += `<span class=\"left\">${textLines[0][i] || ''}</span> <span class=\"right\">${textLines[1][i] || ''}</span><br>`;\n            }\n            promiseOutput.innerHTML = output;\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    function init() {\n        const promiseOutput = document.querySelector('.promisesOutput');\n        getPromiseOutput(promiseOutput);\n    }\n\n    init()\n</script>\n</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "Web Worker",
        "name": "Übung 5.3",
        "content": "",
        "code": [
          {
            "headline": "Webseite zur Berechnung der Primzahlen",
            "content": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Web Worker</title>\n    <meta charset=\"utf-8\">\n    <style>\n        body {\n            background: #fff;\n        }\n        .output {\n            display: flex;\n        }\n        .additionalContent {\n            padding: 20px;\n        }\n        .loadingBar {\n            width: 200px;\n            border: 1px solid #000;\n            height: 15px;\n            position: relative;\n        }\n        .loadingBar .bar {\n            background: green;\n            width: 20px;\n            height: 15px;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .primzahlen ul {\n            border: 1px solid #000;\n            height: 300px;\n            overflow-y: auto;\n            width: 200px;\n        }\n    </style>\n</head>\n<body>\n<h1>Web Worker</h1>\n<div class=\"primzahlen\">\n    <h2>Primzahlen</h2>\n    <button>Start</button>\n    <div class=\"output\">\n        <ul></ul>\n        <div class=\"additionalContent\">\n            <div class=\"loadingBar\">\n                <div class=\"bar\"></div>\n            </div>\n            <p>Gesamtdauer: <span>0</span> Sekunden</p>\n        </div>\n    </div>\n</div>\n<script>\n    let currentNumber, primeOutput, timeOutput, interval, time, animation;\n    const button = document.querySelector('button');\n    const loadingBar = document.querySelector('.loadingBar .bar');\n\n    button.addEventListener('click', function(e) {\n        startCalculation();\n    });\n\n    function startAnimation() {\n        animation = loadingBar.animate(\n            [\n                {\n                    left: '0'\n                },\n                {\n                    left: '180px'\n                },\n                {\n                    left: '0'\n                }\n            ], {\n                duration: 2000,\n                iterations: Infinity,\n            });\n    }\n\n    /* https://stackoverflow.com/questions/40200089/number-prime-test-in-javascript */\n    function isPrime(num) {\n        for (let i = 2n; i * i <= num; i++)\n            if (num % i === 0n)\n                return false;\n        return num > 1;\n    }\n\n    function getNextPrime() {\n        if (isPrime(currentNumber)) {\n            const newPrime = document.createElement('li');\n            newPrime.innerText = currentNumber;\n            primeOutput.appendChild(newPrime);\n            const duration = new Date() - time;\n            timeOutput.innerText = duration / 1000;\n        }\n        if (currentNumber > 300) {\n            clearInterval(interval);\n            animation.pause();\n        }\n        currentNumber++;\n    }\n\n    function startCalculation() {\n        currentNumber = 0n;\n        time = new Date();\n        primeOutput = document.querySelector('.primzahlen ul');\n        timeOutput = document.querySelector('.primzahlen p span');\n        interval = setInterval(getNextPrime, 100);\n        startAnimation();\n    }\n</script>\n</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          },
          {
            "headline": "JavaScript-Code für den WebWorker",
            "content": "\nself.addEventListener('message', function(e) {\n\tif (e.data === 'start') {\n\t\tdoWork();\n\t}\n});\n\n\nlet currentNumber, interval, time;\n\n/* https://stackoverflow.com/questions/40200089/number-prime-test-in-javascript */\nfunction isPrime(num) {\n    for (let i = 2n; i * i <= num; i++)\n        if (num % i === 0n)\n          return false;\n    return num > 1;\n}\n\nfunction getNextPrime() {\n\tif (isPrime(currentNumber)) {\n\t\tconst duration = new Date() - time;\n\t\tpostMessage([currentNumber, duration]);\n\t}\n\tif (currentNumber > 300) {\n\t\tclearInterval(interval);\n\t\tpostMessage(['stop']);\n\t}\n\tcurrentNumber++;\n}\n\nfunction doWork() {\n\tcurrentNumber = 0n;\n\ttime = new Date();\n\tinterval = setInterval(getNextPrime, 100);\n}\n",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "HTML-Code für die WebWorker-Lösung",
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Web Worker</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\t.output {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\t\t\t.additionalContent {\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\t\t\t.loadingBar {\n\t\t\t\twidth: 200px;\n\t\t\t\tborder: 1px solid #000;\n\t\t\t\theight: 15px;\n\t\t\t\tposition: relative;\n\t\t\t}\n\t\t\t.loadingBar .bar {\n\t\t\t\tbackground: green;\n\t\t\t\twidth: 20px;\n\t\t\t\theight: 15px;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\t\t\t.primzahlen ul {\n\t\t\t\tborder: 1px solid #000;\n\t\t\t\theight: 300px;\n\t\t\t\toverflow-y: auto;\n\t\t\t\twidth: 200px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>Web Worker</h1>\n\t\t<div class=\"primzahlen\">\n\t\t\t<h2>Primzahlen</h2>\n\t\t\t<button>Start</button>\n\t\t\t<div class=\"output\">\n\t\t\t\t<ul></ul>\n\t\t\t\t<div class=\"additionalContent\">\n\t\t\t\t\t<div class=\"loadingBar\">\n\t\t\t\t\t\t<div class=\"bar\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Gesamtdauer: <span>0</span> Sekunden</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tlet animation;\n\t\t\tconst worker = new Worker('./doWork.js');\n\t\t\tconst button = document.querySelector('button');\n\t\t\tconst loadingBar = document.querySelector('.loadingBar .bar');\n\t\t\tconst primeOutput = document.querySelector('.primzahlen ul');\n\t\t\tconst timeOutput = document.querySelector('.primzahlen p span');\n\n\t\t\tfunction startAnimation() { \n\t\t\t    animation = loadingBar.animate(\n\t\t\t      \t[\n\t\t\t\t        {\n\t\t\t\t        \tleft: '0'\n\t\t\t\t        },\n\t\t\t\t        {\n\t\t\t\t        \tleft: '180px'\n\t\t\t\t        },\n\t\t\t\t        {\n\t\t\t\t        \tleft: '0'\n\t\t\t\t        }\n\t\t\t      \t], {\n\t\t\t      \tduration: 2000,\n\t\t\t      \titerations: Infinity,\n\t\t\t    });\n\t\t\t}\n\n\t\t\tbutton.addEventListener('click', function(e) {\n\t\t\t\tworker.postMessage('start');\n\t\t\t\tstartAnimation();\n\t\t\t});\n\n\t\t\tworker.addEventListener('message', function(e) {\n\t\t\t\tif (e.data.length === 2) {\n\t\t\t\t\tconst newPrime = document.createElement('li');\n\t\t\t\t\tnewPrime.innerText = e.data[0];\n\t\t\t\t\tprimeOutput.appendChild(newPrime);\n\t\t\t\t\ttimeOutput.innerText = e.data[1] / 1000;\n\t\t\t\t}\n\n\t\t\t\tif (e.data[0] === 'stop') {\n\t\t\t\t\tconsole.log('stop');\n\t\t\t\t\tanimation.pause();\n\t\t\t\t}\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "Messergebnisse",
            "content": "<!DOCTYPE html>\n<html>\n<head>\n\t<title>Messergebnisse</title>\n\t<meta charset=\"utf-8\">\n\t<style>\n\t\tbody {\n\t\t\tfont-family: Arial, Verdana;\n\t\t\tbackground: #fff;\n\t\t\tcolor: #333;\n\t\t}\n\t\t.item {\n\t\t\tmargin-bottom: 30px;\n\t\t\twidth: 66%;\n\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\tborder-radius: 5px;\n\t\t\tpadding: 15px;\n\t\t\tbackground: #ddd;\n\t\t}\n\t\th2 {\n\t\t\tmargin: 0;\n\t\t}\n\t\tp {\n\t\t\tmargin: 15px 0 0;\n\t\t}\n\t</style>\n</head>\n<body>\n<h1>Messergebnisse</h1>\n<div class=\"item\">\n\t<h2>Messen Sie die Geschwindigkeit Ihrer beiden Lösungen und geben Sie hier Ihre Messergebnisse an:</h2>\n\t<p>Beide Lösungen haben für die Berechnung der Primzahlen zwischen 0 und 300 ungefähr 29,4 Sekunden gebraucht.\n\t\tBei komplexeren Berechnungen sollte der Webworker allerdings schneller sein.</p>\n</div>\n</body>\n</html>",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "WWW-Navigator",
        "name": "Übung 5.4",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Responsiv mit Flexbox Desktop-First</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n\t\t<style type=\"text/css\">\n\t\t\thtml, body {\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\th2 {\n\t\t\t\tfont-weight: normal;\n\t\t\t\tmargin:  0;\n\t\t\t}\n\t\t\ta.button {\n\t\t\t\tbackground: #6A709F;\n\t\t\t\tcolor: black;\n\t\t\t\tborder-radius: 20px;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tpadding: 4px 30px;\n\t\t\t\tmargin: 0 5px;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-family: Arial;\n\t\t\t\tborder: 2px outset #F9FBFC;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t\ta.button:hover, \n\t\t\ta.button.active {\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t\t.gridContainer {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template: auto 1fr auto / auto 1fr auto;\n\t\t\t\tmargin: 10px;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tcolor:  white;\n\t\t\t\ttext-align: center;\n\t\t\t\theight: 95%;\n\t\t\t}\n\t\t\t.header {\n\t\t\t\tbackground: #c04f50;\n\t\t\t\tborder-radius: 10px 10px 0 0;\n\t\t\t\tpadding: 0 5px 15px;\n\t\t\t}\n\t\t\t.header .nav {\n\t\t\t\ttext-align: left;\n\t\t\t\tmargin-top: 10px;\n\t\t\t}\n\t\t\t.header, .footer {\n\t\t\t\tgrid-column: 1 / 4;\n\t\t\t}\n\t\t\t.leftSide, .rightSide {\n\t\t\t\tpadding: 10px 2rem;\n\t\t\t\tbackground: #C28280;\n\t\t\t}\n\t\t\t.leftSide .nav a {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin: 15px 0;\n\t\t\t}\n\t\t\t.mainContent {\n\t\t\t\tbackground: #6D9FBF;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tpadding: 20px;\n\t\t\t\ttext-align: left;\n\t\t\t\tfont-family: Arial;\n\t\t\t}\n\t\t\t.footer {\n\t\t\t\tbackground: black;\n\t\t\t\tpadding-bottom: 15px;\n\t\t\t\tborder-radius: 0 0 10px 10px;\n\t\t\t}\n\t\t\t.footer a {\n\t\t\t\tcolor: white;\n\t\t\t\tfont-size: 14px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"gridContainer\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<h2>Header</h2>\n\t\t\t\t<div class=\"nav\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"leftSide\">\n\t\t\t\t<div class=\"nav\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"mainContent\">\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"rightSide\">\n\t\t\t\tAdditional Information: Links to external ressources\n\t\t\t</div>\n\t\t\t<div class=\"footer\">\n\t\t\t\t<h2>Footer: \n\t\t\t\t\t<span>\t\n\t\t\t\t\t\t<a href=\"#\">Sitemap</a>\n\t\t\t\t\t\t<a href=\"#\">Home</a>\n\t\t\t\t\t\t<a href=\"#\">News</a>\n\t\t\t\t\t\t<a href=\"#\">Contact</a>\n\t\t\t\t\t\t<a href=\"#\">About</a>\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t</div>\n\t\t<script>\n\t\t\tlet mainNav, siteContent, leftNav, mainContent, activeButtonMain, rightSide;\n\n\t\t\tfunction buildButton(name, clickFunction) {\n\t\t\t\tconst newButton = document.createElement('a');\n\t\t\t\tnewButton.setAttribute('href', '#');\n\t\t\t\tnewButton.setAttribute('class', 'button');\n\t\t\t\tnewButton.dataset['target'] = name;\n\t\t\t\tnewButton.innerText = name;\n\t\t\t\tnewButton.addEventListener('click', clickFunction);\n\t\t\t\treturn newButton;\n\t\t\t}\n\n\t\t\tfunction navigateSubmenu(e) {\n\t\t\t\tconst sideNavButtons = leftNav.querySelectorAll('a.button');\n\t\t\t\tfor (let button of sideNavButtons) {\n\t\t\t\t\tbutton.classList.remove('active');\n\t\t\t\t}\n\t\t\t\tthis.classList.add('active');\n\n\t\t\t\tconst target = this.dataset['target'];\n\t\t\t\tnewContent = siteContent[activeButtonMain][target].content;\n\t\t\t\tnewReferences = siteContent[activeButtonMain][target].references;\n\t\t\t\tmainContent.innerText = newContent;\n\t\t\t\trightSide.innerHTML = '';\n\t\t\t\tfor (reference of newReferences) {\n\t\t\t\t\tnewLink = document.createElement('a');\n\t\t\t\t\tnewLink.setAttribute('href', reference);\n\t\t\t\t\tnewLink.innerText = reference;\n\t\t\t\t\trightSide.appendChild(newLink);\n\t\t\t\t}\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfunction navigateMainmenu(e) {\n\t\t\t\tconst mainNavButtons = mainNav.querySelectorAll('a.button');\n\t\t\t\tfor (let button of mainNavButtons) {\n\t\t\t\t\tbutton.classList.remove('active');\n\t\t\t\t}\n\t\t\t\tthis.classList.add('active');\n\n\t\t\t\tconst target = this.dataset['target'];\n\t\t\t\tconst contentSubNav = siteContent[target];\n\t\t\t\tleftNav.innerHTML = '';\n\t\t\t\tfor (let subItem of Object.keys(contentSubNav)) {\n\t\t\t\t\tconst newButton = buildButton(subItem, navigateSubmenu);\n\t\t\t\t\tleftNav.appendChild(newButton);\n\t\t\t\t}\n\t\t\t\tactiveButtonMain = target;\n\t\t\t\te.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tasync function init() {\n\t\t\t\tmainNav = document.querySelector('.header .nav');\n\t\t\t\tleftNav = document.querySelector('.leftSide .nav');\n\t\t\t\tmainContent = document.querySelector('.mainContent');\n\t\t\t\trightSide = document.querySelector('.rightSide');\n\n\t\t\t\tsiteContent = JSON.parse(await (await fetch('data/navigator_contents_exer_5.json')).text());\n\t\t\t\tfor (let element of Object.keys(siteContent)) {\n\t\t\t\t\tconst newButton = buildButton(element, navigateMainmenu);\n\t\t\t\t\tmainNav.appendChild(newButton);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinit();\n\t\t</script>\n\t</body>\n</html>",
            "type": "HTML und Javascript",
            "showCode": true,
            "visualizeOutput": true
          }
        ],
        "references": [
          ""
        ]
      }
    ]
  },
  {
    "name": "Übung 6",
    "items": [
      {
        "heading": "Statistik-Balkendiagramm in SVG",
        "name": "Übung 6.1",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "Javascript"
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "SVG Bezier-Animation",
        "name": "Übung 6.2",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "Javascript"
          }
        ],
        "references": [
          ""
        ]
      },
      {
        "heading": "Kalligraphie-Editor in SVG",
        "name": "Übung 6.3",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "Javascript"
          }
        ],
        "references": [
          ""
        ]
      }
    ]
  },
  {
    "name": "Übung 7",
    "items": [
      {
        "heading": "File Generatoren",
        "name": "Übung 7.1",
        "content": "",
        "code": [
          {
            "headline": "ECMAScript 2021-Quellcode für number_file_gen.js",
            "content": "function createOutputFile(textContent) {\n\tconst fs = require('fs');\n\tfs.writeFile('output_number_gen.txt', textContent, function (err) {\n  \t\tif (err) throw err;\n  \t\tconsole.log('File is created successfully.');\n\t});\n}\n\nfunction generateTextLines(numberLines) {\n\tlet textLines = '';\n\tfor (let i = 1; i <= numberLines; i++) {\n\t\ttextLines += i + '. \\n';\n\t}\n\treturn textLines;\n}\n\nfunction init() {\n\tconst numberLines = process.argv.slice(2)[0];\n\tconst fileContent = generateTextLines(numberLines);\n\tcreateOutputFile(fileContent);\n}\n\ninit();",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "ECMAScript 2021-Quellcode für alpha_file_gen.js",
            "content": "const letterMapping = {\n\t0: \"A\",\n\t1: 'B',\n\t2: 'C',\n\t3: 'D',\n\t4: 'E',\n\t5: 'F',\n\t6: 'G',\n\t7: 'H',\n\t8: 'I',\n\t9: 'J',\n\t10: 'K',\n\t11: 'L',\n\t12: 'M',\n\t13: 'N',\n\t14: 'O',\n\t15: 'P',\n\t16: 'Q',\n\t17: 'R',\n\t18: 'S',\n\t19: 'T',\n\t20: 'U',\n\t21: 'V',\n\t22: 'W',\n\t23: 'X',\n\t24: 'Y',\n\t25: 'Z'\n};\n\nfunction createOutputFile(textContent) {\n\tconst fs = require('fs');\n\tfs.writeFile('output_alpha_gen.txt', textContent, function (err) {\n  \t\tif (err) throw err;\n  \t\tconsole.log('File is created successfully.');\n\t});\n}\n\nfunction getLettersTextLine(i) {\n\tlet currentLetter = letterMapping[i % 26];\n\tlet nextLetter = Math.floor(i / 26);\n\treturn nextLetter > 0 ? getLettersTextLine(nextLetter-1) + currentLetter : currentLetter;\n}\n\nfunction generateTextLines(numberLines) {\n\tlet textLines = '';\n\tfor (let i = 0; i < numberLines; i++) {\n\t\ttextLines += getLettersTextLine(i) + '\\n';\n\t}\n\treturn textLines;\n}\n\nfunction init() {\n\tconst numberLines = process.argv.slice(2)[0];\n\tconst fileContent = generateTextLines(numberLines);\n\tcreateOutputFile(fileContent);\n}\n\ninit();",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "Performance Merge",
        "name": "Übung 7.2",
        "content": "",
        "code": [
          {
            "headline": "ECMAScript 2021-Quellcode für merge_files.js",
            "content": "const fs = require('fs').promises;\n\nfunction createOutputFile(textContent) {\n\tfs.writeFile('output_merge_files.txt', textContent, function (err) {\n  \t\tif (err) throw err;\n  \t\tconsole.log('File is created successfully.');\n\t});\n}\n\nasync function createFileContent(file1, file2) {\n\tlet fileContent = '';\n\tconst [text1, text2] = await Promise.all([\n\t\tfs.readFile(file1, 'utf8'),\n\t\tfs.readFile(file2, 'utf8'),\n\t]);\n\tconst lines1 = text1.split(\"\\n\");\n\tconst lines2 = text2.split(\"\\n\");\n\tlet count = 0;\n\tfor (const line of lines1){\n\t\tfileContent += line + lines2[count++] + \"\\n\";\n\t}\n\tcreateOutputFile(fileContent);\n}\n\nfunction init() {\n\tconst file1 = process.argv.slice(2)[0];\n\tconst file2 = process.argv.slice(2)[1];\n\tcreateFileContent(file1, file2);\n}\n\ninit();",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "ECMAScript 2021-Quellcode für merge_streams.js",
            "content": "const fs = require('fs');\nconst { pipeline } = require('stream/promises');\n\nfunction createOutputFile(textContent) {\n\tfs.writeFile('output_merge_streams.txt', textContent, function (err) {\n  \t\tif (err) throw err;\n  \t\tconsole.log('File is created successfully.');\n\t});\n}\n\nasync function createFileContent(file1, file2) {\n\tlet fileContent = '';\n\tawait pipeline(\n\t\tfs.createReadStream(file1, 'utf8'),\n\t\tasync function (source) {\n\t\t\tsource.setEncoding('utf8');\n\t\t\tawait pipeline(\n\t\t\t\tfs.createReadStream(file2, 'utf8'),\n\t\t\t\tasync function (source2) {\n\t\t\t\t\tsource2.setEncoding('utf8');\n\t\t\t\t\tfor await (const chunk of source) {\n\t\t\t\t\t\tfor await (const chunk2 of source2) {\n\t\t\t\t\t\t\ttext1 = chunk.split(\"\\n\");\n\t\t\t\t\t\t\ttext2 = chunk2.split(\"\\n\");\n\t\t\t\t\t\t\tlet count = 0;\n\t\t\t\t\t\t\tfor (const line of text1){\n\t\t\t\t\t\t\t\tfileContent += line + text2[count++] + \"\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcreateOutputFile(fileContent);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n}\n\nfunction init() {\n\tconst file1 = process.argv.slice(2)[0];\n\tconst file2 = process.argv.slice(2)[1];\n\tcreateFileContent(file1, file2);\n}\n\ninit();",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "Express.js Server",
        "name": "Übung 7.3",
        "content": "",
        "code": [
          {
            "headline": "ECMAScript 2021-Quellcode für Express.js-Server",
            "content": "const express = require('express');\nconst fs = require('fs').promises;\nconst multer = require('multer');\n\nconst app = express();\nconst port = 3000;\nconst fileStorageEngine = multer.diskStorage({\n    destination: (req, file, cb) => {\n        cb(null, __dirname + '/upload')\n    },\n    filename: (req, file, cb) => {\n        cb(null, file.originalname)\n    }\n});\nconst upload = multer({storage: fileStorageEngine});\n\napp.use(express.urlencoded({ extended: false }));\n\napp.get('/', (req, res) => {\n    const mainContent = buildStartingPage();\n    res.send(mainContent);\n});\n\napp.post('/merge', upload.array('text-files'), (req, res) => {\n    const file1 = req.files[0].path;\n    const file2 = req.files[1].path;\n    createFileContent(file1, file2).then(fileContent => {\n        createOutputFile(fileContent).then(outputFile => {\n            const fileOutput = fileContent.replaceAll(\"\\n\", \"<br>\");\n            let htmlOutput = buildStartingPage();\n            htmlOutput += '<div class=\"output\">' +\n                            '<a href=\"' + outputFile + '\" download>Erstellte Datei herunterladen</a>' +\n                            '<p>' + fileOutput + '</p>' +\n                          '</div>';\n            res.send(htmlOutput);\n        });\n    });\n});\n\nfunction buildStartingPage() {\n    const mainContent = '<div class=\"mergeService\">' +\n                            '<h1>Merge-Dienst. Laden Sie zwei Daten hoch, um diese zeilenweise zu mergen.</h1>' +\n                            '<form action=\"/merge\" method=\"post\" enctype=\"multipart/form-data\">' +\n                                '<label for=\"text-files\">Laden Sie die Dateien zum Mergen hoch</label>' +\n                                '<input type=\"file\" id=\"text-files\" name=\"text-files\" multiple /><br><br>' +\n                                '<button type=\"submit\">Dateien mergen</button>' +\n                            '</form> ' +\n                        '</div> ';\n    return mainContent;\n}\n\nasync function createFileContent(file1, file2) {\n    let fileContent = '';\n    const [text1, text2] = await Promise.all([\n        fs.readFile(file1, 'utf8'),\n        fs.readFile(file2, 'utf8'),\n    ]);\n    const lines1 = text1.split(\"\\n\");\n    const lines2 = text2.split(\"\\n\");\n    let count = 0;\n    for (const line of lines1){\n        fileContent += line + lines2[count++] + \"\\n\";\n    }\n    return fileContent;\n}\n\nasync function createOutputFile(textContent) {\n    const pathOutputFile = __dirname + '/output/output_merge_files.txt';\n    await fs.writeFile(pathOutputFile, textContent, function (err) {\n        if (err) throw err;\n    });\n    return pathOutputFile;\n}\n\napp.listen(port, () => {\n    console.log(`listening at http://localhost:${port}`);\n})",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      }
    ]
  },
  {
    "name": "Übung 8",
    "items": [
      {
        "heading": "Web-Komponenten erstellen",
        "name": "Übung 8.1",
        "content": "",
        "code": [
          {
            "headline": "Web-Komponente für die Einkaufsliste",
            "content": "import { LitElement, html } from 'https://unpkg.com/lit-element/lit-element.js?module';\n\nclass GroceryList extends LitElement {\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\titems: { type: Array },\n\t\t\tnewItem: { type: String }\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.items = [];\n\t\tthis.newItem = '';\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"groceryList\">\n\t\t\t\t<h1>Einkaufsliste</h1>\n\t\t\t\t<div class=\"newItemHandler\">\n\t\t\t\t\t<p @keyup=\"${this.shortcutListener}\">\n\t\t\t\t\t\tEnter a new item:\n\t\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\t   class=\"itemName\" \n\t\t\t\t\t\t\t   value=\"${this.newItem}\"\n\t\t\t\t\t\t\t   @change=\"${this.updateList}\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button class=\"addItem\"\n\t\t\t\t\t\t\t\t@click=\"${this.addItem}\"\n\t\t\t\t\t\t>Add item</button>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"shoppingList\">\n\t\t\t\t\t${this.items.map(item => html`\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t${item.name}\n\t\t\t\t\t\t\t<button @click=\"${() => this.deleteItem(item.id)}\">Delete</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tshortcutListener(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.addItem();\n\t\t}\n\t}\n\n\tŹ(e) {\n\t\tthis.newItem = e.target.value;\n\t}\n\n\taddItem() {\n\t\tif(this.newItem) {\n\t\t\tthis.items = [...this.items, {\n\t\t\t\tid: this.items.length + 1,\n\t\t\t\tname: this.newItem\n\t\t\t}];\n\t\t\tthis.newItem = '';\n\t\t}\n\t}\n\n\tdeleteItem(id) {\n\t\tthis.items = this.items.filter(item => item.id !== id);\n\t}\n\n}\n\ncustomElements.define('grocery-list', GroceryList);",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "Web-Komponente für die Rednerliste",
            "content": "import { LitElement, html } from 'https://unpkg.com/lit-element/lit-element.js?module';\n\nclass SpeakersList extends LitElement {\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tspeakers: { type: Array },\n\t\t\tnewSpeaker: { type: String }\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.speakers = [];\n\t\tthis.newSpeaker = '';\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<div class=\"SpeakerList\">\n\t\t\t\t<h1>Rednerliste</h1>\n\t\t\t\t<div class=\"newSpeakerHandler\">\n\t\t\t\t\t<p @keyup=\"${this.shortcutListener}\">\n\t\t\t\t\t\tNeuer Redner:\n\t\t\t\t\t\t<input type=\"text\" value=\"${this.newItem}\" @change=\"${this.updateList}\" />\n\t\t\t\t\t\t<button @click=\"${this.addSpeaker}\">Hinzufügen</button>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<ul class=\"speakers\">\n\t\t\t\t\t${this.speakers.map(speaker => html`\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t${speaker.name} ${this.formatTime(speaker.time)}\n\t\t\t\t\t\t\t<button @click=\"${() => this.handleSpeaking(speaker)}\">${speaker.speaking ? 'Stop!' : 'Start!'}</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tshortcutListener(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.addSpeaker();\n\t\t}\n\t}\n\n\trefreshOutput() {\n\t\tthis.speakers = [...this.speakers];\n\t}\n\n\tupdateList(e) {\n\t\tthis.newSpeaker = e.target.value;\n\t}\n\n\taddSpeaker() {\n\t\tif(this.newSpeaker) {\n\t\t\tthis.speakers = [...this.speakers, {\n\t\t\t\tid: this.speakers.length + 1,\n\t\t\t\tname: this.newSpeaker,\n\t\t\t\ttime: 0,\n\t\t\t\tspeaking: true\n\t\t\t}];\n\t\t\tthis.startTimer(this.speakers[this.speakers.length - 1]);\n\t\t\tthis.newSpeaker = '';\n\t\t}\n\t}\n\n\thandleSpeaking(speaker) {\n\t\tspeaker.speaking = !speaker.speaking;\n\t\tthis.speakers = [...this.speakers];\n\t\tif (speaker.speaking) {\n\t\t\tthis.startTimer(speaker);\n\t\t}\n\t}\n\n\tstartTimer(speaker) {\n\t\tconst that = this;\n\t\tfor (const s of this.speakers) {\n\t\t\ts.speaking = false;\n\t\t}\n\t\tspeaker.speaking = true;\n\t\tconst interval = setInterval(function() {\n\t\t\tspeaker.time++;\n\t\t\tthat.speakers = [...that.speakers];\n\t\t\tif (speaker.speaking == false) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tformatTime(time) {\n\t\tconst minutes = Math.floor(time / 60);\n\t\tconst hours = Math.floor(minutes / 60);\n\t\tconst seconds = time - minutes * 60;\n\t\treturn `${hours < 10 ? '0' : ''}${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds} `;\n\t}\n\n}\n\ncustomElements.define('speakers-list', SpeakersList);",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "Web-Komponente für die Tabellenkalkulation",
            "content": "import { LitElement, html } from 'https://unpkg.com/lit-element/lit-element.js?module';\n\nclass Spreadsheet extends LitElement {\n\n\tstatic get properties() {\n\t\treturn {\n\t\t\tnumberRows: { type: Number },\n\t\t\tnumberColumns: { type: Number },\n\t\t\ttableContent: { type: Array }\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.numberRows = this.numberRows ?? 10;\n\t\tthis.numberColumns = this.numberColumns ?? 5;\n\t\tthis.tableContent = [];\n\t\tfor (let i = 0; i < this.numberRows; i++) {\n\t\t\tlet contentRows = [];\n\t\t\tfor (let j = 0; j < this.numberColumns; j++) {\n\t\t\t\tconst contentCell = {\n\t\t\t\t\tformula: '',\n\t\t\t\t\tresult: '',\n\t\t\t\t\tediting: false\n\t\t\t\t};\n\t\t\t\tcontentRows.push(contentCell);\n\t\t\t}\n\t\t\tthis.tableContent.push(contentRows);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<style>\n\t\t\t\ttable {\n\t\t\t\t\tborder-collapse: collapse;\n\t\t\t\t}\n\n\t\t\t\ttd {\n\t\t\t\t\tborder: 1px solid #000;\n\t\t\t\t\twidth: 200px;\n\t\t\t\t\theight: 25px;\n\t\t\t\t\ttext-align: right;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<div class=\"spreadsheet\">\n\t\t\t\t<h1>Tabellenkalkulation</h1>\n\t\t\t\t<table>\n\t\t\t\t\t${this.tableContent.map(row => html`\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t${row.map(cell => html`\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\t\t\t\t   @blur=\"${(e) => this.execCalculation(cell, e)}\"\n\t\t\t\t\t\t\t\t\t\t   @focus=\"${(e) => this.showFormula(cell, e)}\"\n\t\t\t\t\t\t\t\t\t\t   value=\"${cell.editing ? cell.formula : cell.result}\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t`)}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t`)}\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\texecCalculation(cell, e) {\n\t\tcell.editing = false;\n\t\tconst inputString = e.target.value;\n\t\tif (inputString.indexOf(\"=SUM\") >= 0) {\n\t\t\tconst param1 = inputString.substring(\n\t\t\t\tinputString.indexOf(\"(\") + 1,\n\t\t\t\tinputString.lastIndexOf(\":\")\n\t\t\t);\n\t\t\tconst param2 = inputString.substring(\n\t\t\t\tinputString.indexOf(\":\") + 1,\n\t\t\t\tinputString.lastIndexOf(\")\")\n\t\t\t);\n\n\t\t\tconst cell1 = this.getColumn(param1);\n\t\t\tconst cell2 = this.getColumn(param2);\n\n\t\t\tcell.result = this.sum(parseInt(cell1.result), parseInt(cell2.result));\n\t\t\te.target.value = cell.result;\n\t\t} else {\n\t\t\tcell.result = inputString;\n\t\t}\n\t\tcell.formula = inputString;\n\t\tthis.tableContent = [...this.tableContent];\n\t}\n\n\tshowFormula(cell, e) {\n\t\tcell.editing = true;\n\t\te.target.value = cell.formula;\n\t\tthis.tableContent = [...this.tableContent];\n\t}\n\n\tgetColumn(identifier) {\n\t\tconst row = parseInt(identifier.substring(0, 1), 36) - 10;\n\t\tconst column = identifier.substring(1) - 1;\n\t\tconst tableCell = this.tableContent[row][column];\n\t\treturn tableCell;\n\t}\n\n\tsum(x, y) {\n\t\treturn x + y;\n\t}\n\n}\n\ncustomElements.define('spreadsheet-excel-like', Spreadsheet);",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "LitElement Menü-Komponente",
        "name": "Übung 8.2",
        "content": "",
        "code": [
          {
            "content": "import { LitElement, html, css } from 'https://unpkg.com/lit-element/lit-element.js?module';\n\nexport class Menu extends LitElement {\n\n  static get styles() {\n    return css`\n      .menu.vertical {\n        margin-top: 20px;\n      }\n      .vertical button {\n        display: block;\n        margin-top: 10px;\n      }\n      button {\n        background: #6A709F;\n        color: black;\n        border-radius: 20px;\n        text-decoration: none;\n        padding: 4px 30px;\n        margin: 0 5px;\n        font-weight: bold;\n        font-family: Arial;\n        border: 2px outset #F9FBFC;\n        font-size: 14px;\n        cursor: pointer;\n      }\n      button:hover,\n      button.active {\n        background: #fff;\n        box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.5);\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      direction: { type: String },\n      type: { type: String },\n      elementPath: { type: String },\n      elements: { type: Array },\n      subItems: { type: Array },\n      activeMenuItem: { type: Object },\n      dataNavigator: { type: Object }\n    }\n  }\n\n  constructor() {\n    super();\n    this.direction = this.direction ?? 'horizontal';\n    this.type = this.type ?? 'main';\n    this.elementPath = this.elementPath ?? '';\n    this.elements = [];\n    this.subItems = [];\n    this.dataNavigator = this.dataNavigator ?? {};\n    this.activeMenuItem = {};\n  }\n\n  render() {\n    if (!this.elements.length || !this.subItems.length) {\n      this.setNavElements(this.elementPath);\n    }\n\n    if (this.dataNavigator) {\n      this.setVisibleSubnavLinks(this.dataNavigator);\n    }\n\n    return html`\n\t\t\t<div class=\"menu ${this.direction == 'vertical' ? 'vertical' : ''}\">\n                ${this.elements ? this.elements.map(element => html`\n                  <button class=\"${element.active ? 'active' : ''}\" @click=\"${() => this.navigate(element)}\">\n                    ${element.name}\n                  </button>\n                `) : '' }\n\t\t\t</div>\n\t\t`;\n  }\n\n  navigate(element) {\n    for (const item of this.elements) {\n      item.active = false;\n    }\n    element.active = true;\n\n    this.activeMenuItem = element;\n    this.dispatchEvent( new CustomEvent('navigate', {\n      detail: {\n        activeMenuItem: this.activeMenuItem\n      }\n    }) );\n  }\n\n  setNavElements(path) {\n    fetch(path).then(response => response.text()).then((data) => {\n      if (this.type == \"main\") {\n        this.elements = JSON.parse(data);\n      } else {\n        this.subItems = JSON.parse(data);\n      }\n    });\n  }\n\n  setVisibleSubnavLinks(activeLink) {\n    const activeLinkname = activeLink.name;\n    for (const subItem of this.subItems) {\n      if (subItem.name == activeLinkname) {\n        this.elements = subItem.items;\n      }\n    }\n\n    this.dataNavigator = null;\n  }\n\n}\n\ncustomElements.define('custom-menu', Menu);",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "LitElement WWW-Navigator",
        "name": "Übung 8.3",
        "content": "",
        "code": [
          {
            "content": "import { LitElement, html, css } from 'https://unpkg.com/lit-element/lit-element.js?module';\n\nclass WwwNavigator extends LitElement {\n\n  static get styles() {\n    return css`\n      h2 {\n        font-weight: normal;\n        margin:  0;\n      }\n      .gridContainer {\n        display: grid;\n        grid-template: auto 1fr auto / auto 1fr auto;\n        margin: 10px;\n        border-radius: 10px;\n        color:  white;\n        text-align: center;\n        height: 95%;\n      }\n      .header {\n        background: #c04f50;\n        border-radius: 10px 10px 0 0;\n        padding: 0 5px 15px;\n      }\n      .header, .footer {\n        grid-column: 1 / 4;\n      }\n      .leftSide, .rightSide {\n        padding: 10px 2rem;\n        background: #C28280;\n      }\n      .mainContent {\n        background: #6D9FBF;\n        overflow-y: auto;\n        padding: 20px;\n        text-align: left;\n        font-family: Arial;\n      }\n      .footer {\n        background: black;\n        padding-bottom: 15px;\n        border-radius: 0 0 10px 10px;\n      }\n      .footer a {\n        color: white;\n        font-size: 14px;\n      }\n    `;\n  }\n\n  static get properties() {\n    return {\n      mainContent: { type: String },\n      references: { type: Array },\n      subNav: { type: Array }\n    }\n  }\n\n  constructor() {\n    super();\n    this.mainContent = '';\n    this.references = [];\n    this.subNav = [];\n  }\n\n  render() {\n    return html`\n        <div class=\"gridContainer\">\n          <div class=\"header\">\n            <h2>Header</h2>\n            <custom-menu direction=\"horizontal\" \n                         type=\"main\" \n                         elementPath=\"data/nav_horizontal_main.json\"\n                         @navigate=\"${(e) => this.updateNav(e)}\"\n            ></custom-menu>\n          </div>\n          <div class=\"leftSide\">\n            <custom-menu .dataNavigator=\"${this.subNav}\" \n                         direction=\"vertical\" \n                         type=\"sub\" \n                         elementPath=\"data/nav_vertical_sub.json\"\n                         @navigate=\"${(e) => this.updateContent(e)}\"\n            ></custom-menu>\n          </div>\n          <div class=\"mainContent\">\n            ${this.mainContent}\n          </div>\n          <div class=\"rightSide\">\n            ${this.references ? this.references.map(reference => html`\n              <a href=\"${reference}\">${reference}</a>\n            `) : 'Additional Information: Links to external ressources'}\n          </div>\n          <div class=\"footer\">\n            <h2>Footer:\n              <span>\n                  <a href=\"#\">Sitemap</a>\n                  <a href=\"#\">Home</a>\n                  <a href=\"#\">News</a>\n                  <a href=\"#\">Contact</a>\n                  <a href=\"#\">About</a>\n              </span>\n            </h2>\n          </div>\n        </div>\n\t`;\n  }\n\n  updateNav(e) {\n    const activeMenuItem = e.detail.activeMenuItem;\n    this.subNav = activeMenuItem;\n  }\n\n  updateContent(e) {\n    const activeMenuItem = e.detail.activeMenuItem;\n    this.mainContent = activeMenuItem.content;\n    this.references = activeMenuItem.references;\n  }\n\n}\n\ncustomElements.define('www-navigator', WwwNavigator);",
            "type": "Javascript",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      }
    ]
  },
  {
    "name": "Übung 9",
    "items": [
      {
        "heading": "PWA",
        "name": "Übung 9.1",
        "content": "",
        "code": [
          {
            "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>PWA</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, Verdana;\n\t\t\t\tbackground: #ddd;\n\t\t\t\tcolor: #333;\n\t\t\t}\n\t\t\tbody > p {\n\t\t\t\twidth: 66%;\n\t\t\t}\n\t\t\t.item {\n\t\t\t\tmargin: 30px 0;\n\t\t\t\twidth: 66%;\n\t\t\t\t-webkit-box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tbox-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t}\n\t\t\th2 {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\tp {\n\t\t\t\tmargin: 15px 0 0;\n\t\t\t}\n\t\t\tiframe {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 80vh;\n\t\t\t\tmargin-top: 15px;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<h1>PWA</h1>\n\t\t<p>Wandeln Sie Ihren LitElement WWW-Navigator aus Aufgabe 8.3 in eine Progressive Web App um.</p>\n\t\t<p>Hinweis: Für den Betrieb von HTTPS unter localhost siehe web.dev/how-to-use-local-https/ oder HTTPS-Server in Python3</p>\n\t\t<p>Achtung: Lighthouse-Test für PWAs auf localhost ist fehlerhaft in der Chrome-Version 96 (siehe Issues).\n\t\t\tGehen Sie bei Problemen in eine andere Version (Chrome Canary) oder einen anderen Browser. Oder verwenden\n\t\t\tSie Lighthouse auf der Kommandozeile</p>\n\t\t<div class=\"item\">\n\t\t\t<h2>Beschreiben Sie hier Ihr Vorgehen, Ihre Libraries und Tools, die Sie einsetzen:</h2>\n\t\t\t<p>Zur Umsetzung der Progressive Web App habe ich mich hauptsächlich an diesem Youtube-Tutorial orientiert: <br>\n\t\t\t\thttps://www.youtube.com/watch?v=E8BeSSdIUW4\n\t\t\t\t<br><br>\n\t\t\t\tIch habe die Dev-Tools (speziell den Tab \"App\") verwendet, um zu prüfen, was bereits für die PWA vorhanden ist und was noch fehlt.\n\t\t\t\t<br><br>\n\t\t\t\tIch habe mit der \"manifest.json\" Datei angefangen und diese mit allen benötigten Parametern angelegt. <br>\n\t\t\t\tAnschließend habe ich einen Service Worker erstellt und diesen für die Webseite registriert.\n\t\t\t\tDer Service Worker behandelt das bereitstellen von statischen Ressourcen aus dem Cache und von\n\t\t\t\tdynamischen Ressourcen entweder aus dem Web oder im Offline Betrieb auch aus dem Cache.\n\t\t\t\t<br><br>\n\t\t\t\tFür die Verwendung von HTTPS habe ich lokal einen Node-Express Server erstellt, der mit HTTPS startet.\n\t\t\t\tDie benötigten Zertifikate habe ich mit openssl erstellt und eingebunden. Den LitElement WWW-Navigator\n\t\t\t\tkonnte ich dabei so von Aufgabe 8.3 übernehmen.\n\t\t\t\t<br><br>\n\t\t\t\tDie abschließende Analyse wurde mit Lighthouse durchgeführt. Da Lighthouse auf dem lokalen Server\n\t\t\t\tnicht funktioniert hatte, habe ich die PWA auf den Github-Server kopiert und die PWA von da aus analysiert.\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Beschreiben Sie hier Ihre Probleme und Lösungskonzepte:</h2>\n\t\t\t<p>Das erste Problem war die erfolgreiche Registrierung des Service Workers. Es stellte sich heraus,\n\t\t\t\tdass dieser lokal nur unter Verwendung von HTTP korrekt eingebunden werden konnte. Für die Erstellung\n\t\t\t\teiner PWA ist allerdings HTTPS eine Vorauusetzung. Die PWA wurde also zunächst unter HTTP entwickelt\n\t\t\t\tund später wurde dann auf HTTPS umgestellt.\n\t\t\t\t<br><br>\n\t\t\t\tDas zweite Problem bereitete die Nutzung von HTTPS. Dies war unter Verwendung von XAMPP als lokalen\n\t\t\t\tServer nicht ohne weiteres möglich. Um dieses Problem zu umgehen habe ich alternativ auf einen Node-Express\n\t\t\t\tServer gesetzt, der HTTPS unterstützt.\n\t\t\t\t<br><br>\n\t\t\t\tDas dritte Problem schließlich war die Analyse der PWA mittels Lighthouse. Dies war auf dem lokalen\n\t\t\t\tServer nicht möglich und musste deshalb auf einem öffentlichen Server durchgeführt werden.</p>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<h2>Geben Sie hier Ihre Lighthouse-Messergebnisse für Ihre PWA ein:</h2>\n\t\t\t<iframe src=\"lighthouse.html\"></iframe>\n\t\t</div>\n\t</body>\n</html>",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": true
          }
        ],
        "references": [""]
      }
    ]
  },
  {
    "name": "Übung 10",
    "items": [
      {
        "heading": "Komponente in Vue.js",
        "name": "Übung 10.1",
        "content": "",
        "code": [
          {
            "content": "<html><head><title>Vue Hello World</title><script defer=\"defer\" src=\"js/vue10-1.js\"></script></head><body><div id=\"app\"></div></body></html>",
            "type": "Vue",
            "showCode": false,
            "visualizeOutput": true
          },
          {
            "headline": "Vue.js Single File Component",
            "content": "<template>\n  <div class=\"eingabe\">\n    <input type=\"text\" v-model=\"inputText\" />\n    <p>\n      <b>Number letters:</b>\n      <span>{{ letters }}</span>\n    </p>\n    <p>\n      <b>Number spaces:</b>\n      <span>{{ spaces }}</span>\n    </p>\n    <p>\n      <b>Number words:</b>\n      <span>{{ words }}</span>\n    </p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'eingabe',\n  data() {\n    return {\n      inputText: \"\",\n      letters: 0,\n      spaces: 0,\n      words: 0\n    }\n  },\n  methods: {},\n  watch: {\n    inputText(val) {\n      if (val === '') {\n        this.letters = 0;\n        this.spaces = 0;\n        this.words = 0;\n      } else {\n        this.letters = val.length;\n        this.spaces = val.split(\" \").length - 1;\n        this.words = val.split(\" \").length;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.eingabe {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  display: inline-block;\n  padding: 20px;\nmargin-right: 25px;\n}\ninput {\n  margin-bottom: 10px;\n}\np {\n  margin-top: 25px;\n}\nspan {\n  float: right;\n}\n</style>\n",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "Webseite, auf der die Komponente mehrfach eingebunden wird",
            "content": "<template>\n  <div id=\"app\">\n    <eingabe/>\n    <eingabe/>\n  </div>\n</template>\n\n<script>\nimport eingabe from './components/eingabe.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    eingabe\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 70px 80px;\n}\n</style>\n",
            "type": "HTML",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "Menü-Komponente",
        "name": "Übung 10.2",
        "content": "",
        "code": [
          {
            "content": "<html>\n<head>\n<title>Vue Hello World</title>\n<meta charset=\"utf-8\"/>\n<script defer=\"defer\" src=\"js/vue10-2.js\"></script>\n</head>\n<body>\n<div id=\"app\"></div>\n</body>\n</html>",
            "type": "Vue",
            "showCode": false,
            "visualizeOutput": true
          },
          {
            "headline": "Vue.js Single File Component",
            "content": "<template>\n  <div class=\"menu\" :class=\"direction\">\n    <ul>\n      <li v-for=\"item in menuItems\" :key=\"item.id\">\n        <button @click=\"navigate(item)\">{{ item.name }}</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'custom-menu',\n  data() {\n    return {\n\n    }\n  },\n  props: {\n    menuItems: Array,\n    direction: String\n  },\n  methods: {\n    navigate(item) {\n      if (item.target.includes('http') || item.target.includes('#')) {\n        window.open(item.target, \"_self\");\n      } else {\n        this.$emit('navigate', item.target);\n      }\n    }\n  },\n  watch: {\n\n  }\n}\n</script>\n\n<style scoped>\n\n.menu {\n  margin: 20px 0;\n}\n\n.menu ul {\n  background: blue;\n  display: inline-block;\n  padding: 12px;\n  border-radius: 10px;\n}\n\n.menu.horizontal ul {\n  display: inline-flex;\n}\n\n.menu.horizontal ul li {\n  margin-right: 15px;\n}\n\n.menu.vertical ul li:not(:first-child) {\n  margin-top: 15px;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\n</style>",
            "type": "Vue",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "Webseite, auf der die Komponente mehrfach eingebunden wird",
            "content": "<template>\n  <div id=\"app\">\n    <custom-menu :menuItems=\"menuHorizontal\" direction=\"horizontal\" @navigate=\"navigate\" />\n    <custom-menu :menuItems=\"menuVertical\" direction=\"vertical\" @navigate=\"navigate\" />\n  </div>\n</template>\n\n<script>\nimport customMenu from './components/menu.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    customMenu\n  },\n  data() {\n    return {\n      menuHorizontal: [\n        {\n          id: 1,\n          name: 'Menüpunkt 1',\n          target: '#'\n        },\n        {\n          id: 2,\n          name: 'Menüpunkt 2',\n          target: 'https://www.google.de'\n        },\n        {\n          id: 3,\n          name: 'Menüpunkt 3',\n          target: 'gfdjghkdfjgh'\n        }\n      ],\n      menuVertical: [\n        {\n          id: 1,\n          name: 'Menüpunkt 1',\n          target: 'lkfhöljkf'\n        },\n        {\n          id: 2,\n          name: 'Menüpunkt 2',\n          target: 'https://www.youtube.com'\n        },\n        {\n          id: 3,\n          name: 'Menüpunkt 3',\n          target: '#'\n        }\n      ]\n    }\n  },\n  methods: {\n    navigate(target) {\n      console.log(target);\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 70px 80px;\n}\n</style>",
            "type": "Vue",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "Vue.js WWW-Navigator",
        "name": "Übung 10.3",
        "content": "",
        "code": [
          {
            "content": "<html>\n<head>\n<title>Vue Hello World</title>\n<script defer=\"defer\" src=\"js/vue10-3.js\"></script>\n<meta charset=\"utf-8\"/>\n</head>\n<body>\n<div id=\"app\"></div>\n</body>\n</html>",
            "type": "Vue",
            "showCode": false,
            "visualizeOutput": true
          },
          {
            "headline": "App.vue",
            "content": "<template>\n  <div id=\"app\">\n    <www-navigator></www-navigator>\n  </div>\n</template>\n\n<script>\nimport wwwNavigator from './components/wwwNavigator.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    wwwNavigator\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n</style>",
            "type": "Vue",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "wwwNavigator.vue",
            "content": "<template>\n  <div class=\"gridContainer\">\n    <div class=\"header\">\n      <h2>Header</h2>\n      <custom-menu direction=\"horizontal\"\n                   type=\"main\"\n                   :menuItems=\"mainMenu\"\n                   @navigate=\"updateSubnav\"\n      ></custom-menu>\n    </div>\n    <div class=\"leftSide\">\n      <custom-menu direction=\"vertical\"\n                   type=\"sub\"\n                   :menuItems=\"activeSubMenuItems\"\n                   @navigate=\"updateContent\"\n      ></custom-menu>\n    </div>\n    <div class=\"mainContent\">\n      {{ mainContent }}\n    </div>\n    <div class=\"rightSide\">\n      <a v-for=\"reference in references\" :key=\"reference\" :href=\"reference\">{{ reference }}</a>\n    </div>\n    <div class=\"footer\">\n      <h2>Footer:\n        <span>\n          <a href=\"#\">Sitemap</a>\n          <a href=\"#\">Home</a>\n          <a href=\"#\">News</a>\n          <a href=\"#\">Contact</a>\n          <a href=\"#\">About</a>\n        </span>\n      </h2>\n    </div>\n  </div>\n</template>\n\n<script>\nimport customMenu from './menu.vue';\nimport jsonMainMenu from '../assets/nav_horizontal_main.json';\nimport jsonSubMenu from '../assets/nav_vertical_sub.json';\n\nexport default {\n  name: 'www-navigator',\n  components: {\n    customMenu\n  },\n  data() {\n    return {\n      mainContent: \"\",\n      references: [],\n      mainMenu: jsonMainMenu,\n      subMenu: jsonSubMenu,\n      activeSubMenuItems: []\n    }\n  },\n  methods: {\n    updateSubnav(item) {\n      const activeLinkname = item.name;\n      for (const subItem of this.subMenu) {\n        if (subItem.name == activeLinkname) {\n          this.activeSubMenuItems = subItem.items;\n        }\n      }\n      this.mainContent = \"\";\n      this.references = [];\n    },\n    updateContent(item) {\n      this.mainContent = item.content;\n      this.references = item.references;\n    }\n  },\n}\n</script>\n\n<style scoped>\n\nh2 {\n  font-weight: normal;\n  margin:  0;\n}\n.gridContainer {\n  display: grid;\n  grid-template: auto 1fr auto / auto 1fr auto;\n  margin: 10px;\n  border-radius: 10px;\n  color:  white;\n  text-align: center;\n  height: 95%;\n}\n.header {\n  background: #c04f50;\n  border-radius: 10px 10px 0 0;\n  padding: 0 5px 15px;\n}\n.header, .footer {\n  grid-column: 1 / 4;\n}\n.leftSide, .rightSide {\n  padding: 10px 2rem;\n  background: #C28280;\n}\n.mainContent {\n  background: #6D9FBF;\n  overflow-y: auto;\n  padding: 20px;\n  text-align: left;\n  font-family: Arial;\n}\n.footer {\n  background: black;\n  padding-bottom: 15px;\n  border-radius: 0 0 10px 10px;\n}\n.footer a {\n  color: white;\n  font-size: 14px;\n}\n\n</style>",
            "type": "Vue",
            "showCode": true,
            "visualizeOutput": false
          },
          {
            "headline": "menu.vue",
            "content": "<template>\n  <div class=\"menu\" :class=\"direction\">\n    <ul>\n      <li v-for=\"item in menuItems\" :key=\"item.id\">\n        <button :class=\"item.active ? 'active' : ''\" @click=\"navigate(item)\">{{ item.name }}</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'custom-menu',\n  data() {\n    return {\n\n    }\n  },\n  props: {\n    menuItems: Array,\n    direction: String\n  },\n  methods: {\n    navigate(activeItem) {\n      for (const menuItem of this.menuItems) {\n        menuItem.active = false;\n      }\n      activeItem.active = true;\n      console.log(this.menuItems);\n      this.$emit('navigate', activeItem);\n    }\n  },\n  watch: {\n\n  }\n}\n</script>\n\n<style scoped>\n\n.menu.horizontal ul {\n  display: inline-flex;\n}\n\n.menu.horizontal ul li {\n  margin-right: 10px;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\n.vertical button {\n  display: block;\n  margin-top: 15px;\n  width: 100%;\n}\nbutton {\n  background: #6A709F;\n  color: black;\n  border-radius: 20px;\n  text-decoration: none;\n  padding: 4px 30px;\n  margin: 0 5px;\n  font-weight: bold;\n  font-family: Arial;\n  border: 2px outset #F9FBFC;\n  font-size: 14px;\n  cursor: pointer;\n}\nbutton:hover,\nbutton.active {\n  background: #fff;\n  box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.5);\n}\n\n</style>",
            "type": "Vue",
            "showCode": true,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      }
    ]
  },
  {
    "name": "Übung 11",
    "items": [
      {
        "heading": "WebAssembly-Modul von Hand erstellen",
        "name": "Übung 11.1",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "Performanz-Messungen und -Vergleich",
        "name": "Übung 11.2",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      }
    ]
  },
  {
    "name": "Übung 12",
    "items": [
      {
        "heading": "Sicherer ArrayWrapper",
        "name": "Übung 12.1",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "WebGoat Injection",
        "name": "Übung 12.2",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "WebGoat XSS",
        "name": "Übung 12.3",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      },
      {
        "heading": "WebGoat Cross-Site Request Forgeries",
        "name": "Übung 12.4",
        "content": "",
        "code": [
          {
            "content": "",
            "type": "HTML",
            "showCode": false,
            "visualizeOutput": false
          }
        ],
        "references": [""]
      }
    ]
  }
]


